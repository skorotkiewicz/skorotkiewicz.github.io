<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>php on Sebastian Korotkiewicz - Tech{{log}}</title><link>http://localhost:1313/tags/php/</link><description>Recent content in php on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 Feb 2020 17:43:31 +0200</lastBuildDate><atom:link href="http://localhost:1313/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Create a Tor Website with Nginx and PHP</title><link>http://localhost:1313/techlog/create-a-tor-website-with-nginx-and-php/</link><pubDate>Sun, 23 Feb 2020 17:43:31 +0200</pubDate><guid>http://localhost:1313/techlog/create-a-tor-website-with-nginx-and-php/</guid><description>li { padding-bottom: 5px; } Step 1: Install Debian Prepare Debian to install https packages sudo apt install apt-transport-https Step 2: Install Nginx and PHP sudo apt install nginx php7.3-fpm sudo rm /etc/nginx/sites-enabled/default sudo nano /etc/nginx/sites-enabled/default Add the followings to the new /etc/nginx/sites-enabled/default and save: server { listen 127.0.0.1:8080 default_server; server_name localhost; root /var/www/tor/public; index index.php index.html index.htm; server_tokens off; location / { allow 127.0.0.1; deny all; try_files $uri $uri/ /index.</description></item><item><title>Switch PHP version</title><link>http://localhost:1313/techlog/switch-php-version/</link><pubDate>Wed, 10 Jan 2018 02:29:44 +0200</pubDate><guid>http://localhost:1313/techlog/switch-php-version/</guid><description>From php5.6 to php7.0: Apache:
sudo a2dismod php5.6 ; sudo a2enmod php7.0 ; sudo service apache2 restart CLI:
sudo update-alternatives --set php /usr/bin/php7.0 From php7.0 to php5.6: Apache:
sudo a2dismod php7.0 ; sudo a2enmod php5.6 ; sudo service apache2 restart CLI:
sudo update-alternatives --set php /usr/bin/php5.6</description></item><item><title>PHP bot to get wikipedia definitions</title><link>http://localhost:1313/techlog/php-bot-to-get-wikipedia-definitions/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>http://localhost:1313/techlog/php-bot-to-get-wikipedia-definitions/</guid><description>&amp;lt;?php function wikidefinition($s) { $url = &amp;#34;http://it.wikipedia.org/w/api.php?action=opensearch&amp;amp;search=&amp;#34;.urlencode($s).&amp;#34;&amp;amp;format=xml&amp;amp;limit=1&amp;#34;; $ch = curl_init($url); curl_setopt($ch, CURLOPT_HTTPGET, TRUE); curl_setopt($ch, CURLOPT_POST, FALSE); curl_setopt($ch, CURLOPT_HEADER, false); curl_setopt($ch, CURLOPT_NOBODY, FALSE); curl_setopt($ch, CURLOPT_VERBOSE, FALSE); curl_setopt($ch, CURLOPT_REFERER, &amp;#34;&amp;#34;); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE); curl_setopt($ch, CURLOPT_MAXREDIRS, 4); curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); curl_setopt($ch, CURLOPT_USERAGENT, &amp;#34;Mozilla/5.0 (Windows; U; Windows NT 6.1; he; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8&amp;#34;); $page = curl_exec($ch); $xml = simplexml_load_string($page); if((string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Description) { return array((string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Text, (string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Description, (string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Url); } else { return &amp;#34;&amp;#34;; } }</description></item><item><title>Notification of the new linux kernel on your Android in PHP</title><link>http://localhost:1313/techlog/notification-of-the-new-linux-kernel-on-your-android-in-php/</link><pubDate>Sat, 02 Feb 2013 13:06:24 +0000</pubDate><guid>http://localhost:1313/techlog/notification-of-the-new-linux-kernel-on-your-android-in-php/</guid><description>how to use? very simple!
$ crontab -e add line
* 7 * * * php /home/mod/notification.php&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 and save
now script will be run from cron every day at 7:00 am and notify you of a new kernel!</description></item><item><title>if echo</title><link>http://localhost:1313/techlog/if-echo/</link><pubDate>Fri, 02 Nov 2012 17:02:48 +0000</pubDate><guid>http://localhost:1313/techlog/if-echo/</guid><description>$value = &amp;#39;aaa&amp;#39;; echo $value==&amp;#39;aaa&amp;#39; ? &amp;#39;yes&amp;#39; : &amp;#39;no&amp;#39;; example 1
echo &amp;#34;always say this &amp;#34; . ( ($test == &amp;#34;true&amp;#34;) ? &amp;#34;Say this if that is true&amp;#34; : &amp;#34;&amp;#34;) . &amp;#34; Always say this at the end.&amp;#34;; example 2
echo &amp;#39;&amp;lt;option value=&amp;#34;&amp;#39;.$value.&amp;#39;&amp;#34;&amp;#39;.($value==&amp;#39;United States&amp;#39; ? &amp;#39;selected=&amp;#34;selected&amp;#34;&amp;#39; : &amp;#39;&amp;#39;).&amp;#39;&amp;gt;&amp;#39;.$value.&amp;#39;&amp;lt;/option&amp;gt;&amp;#39;;</description></item><item><title>PHP Security - disabled the exec, etc.</title><link>http://localhost:1313/techlog/php-security-disabled-the-exec-etc./</link><pubDate>Sun, 30 Sep 2012 08:05:06 +0000</pubDate><guid>http://localhost:1313/techlog/php-security-disabled-the-exec-etc./</guid><description>In /etc/php5/apache2/php.ini
as someone already can upload phpshell it will not do too much…
disable_functions = exec, shell_exec, system, popen, passthru, escapeshellarg, escapeshellcmd, proc_close, proc_open, ini_alter, dl, popen, show_source, set_time_limit, php_uname, phpinfo, diskfreespace, disk_total_space, disk_free_space, get_current_user, posix_uname  </description></item><item><title>Show all php Errors</title><link>http://localhost:1313/techlog/show-all-php-errors/</link><pubDate>Sun, 16 Sep 2012 09:59:53 +0000</pubDate><guid>http://localhost:1313/techlog/show-all-php-errors/</guid><description>Show all php error in php file
error_reporting(E_ALL); ini_set(&amp;#39;display_errors&amp;#39;, &amp;#39;1&amp;#39;);</description></item></channel></rss>