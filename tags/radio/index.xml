<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>radio on Sebastian Korotkiewicz - Tech{{log}}</title><link>https://skorotkiewicz.github.io/tags/radio/</link><description>Recent content in radio on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Sep 2017 01:18:06 +0200</lastBuildDate><atom:link href="https://skorotkiewicz.github.io/tags/radio/index.xml" rel="self" type="application/rss+xml"/><item><title>Radio station with RDS function on Raspberry Pi</title><link>https://skorotkiewicz.github.io/techlog/radio-station-with-rds-function-on-raspberry-pi/</link><pubDate>Mon, 04 Sep 2017 01:18:06 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/radio-station-with-rds-function-on-raspberry-pi/</guid><description>Today I will demonstrate you how to install the FM radio transmitter on Raspberry Pi. It is not just a transmitter! It supports RDS function with all its options (PS, RT, TA/TP). So do it!
The only thing we need to know is that the transmitter needs an antenna. Of course, you can broadcast from GPIO goldpin, but the range of such a solution is barely a few meters. Simply attach the short cables to the GPIO4 (4 pin inside) to extend the range up to a hundred meters.</description></item><item><title>How to change the description of the Stream in Liquidsoap</title><link>https://skorotkiewicz.github.io/techlog/how-to-change-the-description-of-the-stream-in-liquidsoap/</link><pubDate>Sun, 22 Jun 2014 09:27:44 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/how-to-change-the-description-of-the-stream-in-liquidsoap/</guid><description>output.icecast( %mp3(bitrate=96), mount=&amp;quot;/radio-96.mp3&amp;quot;, genre=&amp;quot;electronic&amp;quot;, description=&amp;quot;ITUnix Radio Electronic Music&amp;quot;, name=&amp;quot;ITUnix Radio&amp;quot;, url=&amp;quot;http://radio.itunix.eu&amp;quot;, host=&amp;quot;localhost&amp;quot;, port=8147, password=&amp;quot;PASSWORD&amp;quot;, radio) example 2
output.icecast( %mp3(stereo=false, bitrate=16, samplerate=22050), host=&amp;quot;audio3.radioreference.com&amp;quot;, port = 80, password = &amp;quot;xxxxxxxxx&amp;quot;, genre=&amp;quot;Scanner&amp;quot;, description=&amp;quot;Scanner audio&amp;quot;, mount=&amp;quot;/xxxxxxxx&amp;quot;, name=&amp;quot;Baltimore Maryland Police/Fire/EMS&amp;quot;, user=&amp;quot;source&amp;quot;, url=&amp;quot;http://www.scanbaltimore.com&amp;quot;, radio)</description></item><item><title>Liquidsoap: AutoDJ for icecast</title><link>https://skorotkiewicz.github.io/techlog/liquidsoap-autodj-for-icecast/</link><pubDate>Fri, 01 Nov 2013 15:03:30 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/liquidsoap-autodj-for-icecast/</guid><description>Wonder it’s called “Liquidsoap”. Is a piece of firmware that can really do a lot of things. What does it do? Starting play playlists, depending on the time or any logic, he can listen to Icecast or Shoutcast instead, is able to download the streams from other servers, mix them, detect or work, etc…
Configuration looks like this:
#!/usr/bin/liquidsoap
set(&amp;quot;log.file.path&amp;quot;,&amp;quot;/tmp/basic-radio.log&amp;quot;)
# required speech synthesizer, aptitude install festival
message = &amp;quot;That's it!</description></item></channel></rss>