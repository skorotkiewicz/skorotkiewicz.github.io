<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>systemd on Sebastian Korotkiewicz - Tech{{log}}</title><link>https://skorotkiewicz.github.io/tags/systemd/</link><description>Recent content in systemd on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Mar 2022 09:43:14 +0200</lastBuildDate><atom:link href="https://skorotkiewicz.github.io/tags/systemd/index.xml" rel="self" type="application/rss+xml"/><item><title>Systemd Without Root and with Instances</title><link>https://skorotkiewicz.github.io/techlog/systemd-without-root-instances/</link><pubDate>Sun, 27 Mar 2022 09:43:14 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/systemd-without-root-instances/</guid><description>A user Systemd service should be placed in ~/.config/systemd/user/ directory if you want to have full ownership as normal user. Create it if it doesnâ€™t exist.
mkdir -p ~/.config/systemd/user/ Create a systemd service unit file under the directory. $ vim ~/.config/systemd/user/SimpleHTTPServer@.service [Unit] Description=SimpleHTTPServer After=network-online.target Wants=network-online.target [Service] ExecStart=/usr/bin/python3 -m http.server %i WorkingDirectory=%h/Public Restart=always [Install] WantedBy=multi-user.target Reload systemd. $ systemctl --user daemon-reload Confirm the service is available. $ systemctl --user list-unit-files SimpleHTTPServer@.service UNIT FILE STATE SimpleHTTPServer@.</description></item><item><title>Run programs in the screen at startup using systemd</title><link>https://skorotkiewicz.github.io/techlog/run-programs-in-the-screen-at-startup-using-systemd/</link><pubDate>Mon, 05 Dec 2016 18:40:24 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/run-programs-in-the-screen-at-startup-using-systemd/</guid><description>systemd is very simple and easy to use, here you can see how to run the program in a screen with the specified user
create new file
nano /etc/systemd/system/radio.service and put it into a new file
[Unit] Description=Radio DJ After=network.target [Service] Type=oneshot ExecStart=/usr/bin/screen -dmS screennameradio /etc/liquidsoap/radio-pro.liq ExecStop=/usr/bin/screen -S screennameradio -X quit RemainAfterExit=yes User=radiodj [Install] WantedBy=multi-user.target and, of course
systemctl enable radio systemctl start radio</description></item></channel></rss>