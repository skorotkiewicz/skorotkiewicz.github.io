<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>backup on Sebastian Korotkiewicz - Tech{{log}}</title><link>https://sekor.eu.org/tags/backup/</link><description>Recent content in backup on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Jan 2016 18:10:58 +0200</lastBuildDate><atom:link href="https://sekor.eu.org/tags/backup/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple server backup</title><link>https://sekor.eu.org/techlog/simple-server-backup/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://sekor.eu.org/techlog/simple-server-backup/</guid><description>sudo mount /dev/xxxx -o remount-ro /mnt
mkdir /backup; cd /backup
tar --exclude='./backup' --exclude='./mnt/backup' -cvjpf mybackup.tar.bz2 /mnt
Then you unpack with behavior permission
sudo tar -xvjpf mybackup.tar.bz2
Creating A Backup All Datebases And Restore mysqldump -u root -p --all-databases &amp;gt; all_databases.sql
mysqldump -u root -p --all-databases &amp;lt; all_databases.sql
Creating A Backup Single Datebase And Restore mysqldump -u root -p db_name &amp;gt; db_file.sql
mysqldump -u root -p db_name &amp;lt; db_file.sql
Split larger files into smaller parts?</description></item><item><title>Rsync backup remote server to local</title><link>https://sekor.eu.org/techlog/rsync-backup-remote-server-to-local/</link><pubDate>Fri, 16 May 2014 17:58:16 +0000</pubDate><guid>https://sekor.eu.org/techlog/rsync-backup-remote-server-to-local/</guid><description>What can I say, a simple way to backup remote server on the local machine
rsync -aHxv root@remote.example.com:/* /local/backup/server/ \ --exclude=/dev \ --exclude=/proc \ --exclude=/sys \ --exclude=/tmp</description></item><item><title>Quick server backup</title><link>https://sekor.eu.org/techlog/quick-server-backup/</link><pubDate>Sun, 29 Dec 2013 02:30:09 +0000</pubDate><guid>https://sekor.eu.org/techlog/quick-server-backup/</guid><description>mount /dev/xxxx -o remount-ro /mnt tar -cvjpf serverbackup.tar.bz2 /mnt then unpack the behavior of permissions
tar -xvjpf serverbackup.tar.bz2 here my script with mysql backup. backup.sh
# create backup catalog mkdir /backup # clean aptitude clean rm /var/log/*.gz rm /var/log/apache2/*.gz rm /var/log/apt/*.gz rm /var/log/clamav/*.gz rm /var/backups/*.gz # start archive tar -cvjpf /backup/backup_bin.tar.bz2 /bin tar -cvjpf /backup/backup_home.tar.bz2 /home tar -cvjpf /backup/backup_lib.tar.bz2 /lib tar -cvjpf /backup/backup_root.tar.bz2 /root tar -cvjpf /backup/backup_usr.tar.bz2 /usr tar -cvjpf /backup/backup_etc.</description></item></channel></rss>