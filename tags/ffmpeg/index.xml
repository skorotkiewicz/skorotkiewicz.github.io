<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ffmpeg on Sebastian Korotkiewicz - Tech{{log}}</title><link>https://skorotkiewicz.github.io/tags/ffmpeg/</link><description>Recent content in ffmpeg on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 02 Jul 2022 19:25:21 +0200</lastBuildDate><atom:link href="https://skorotkiewicz.github.io/tags/ffmpeg/index.xml" rel="self" type="application/rss+xml"/><item><title>Start With Yolo V6</title><link>https://skorotkiewicz.github.io/techlog/start-with-yolov6/</link><pubDate>Sat, 02 Jul 2022 19:25:21 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/start-with-yolov6/</guid><description>Create conda environment:
$ conda create -n yolo python=3.8 -y
Activate environment:
$ conda activate yolo
Download repo and install dependencies:
$ git clone https://github.com/meituan/YOLOv6 &amp;amp;&amp;amp; cd YOLOv6 $ pip install -r requirements.txt Download a pretrained model from the YOLOv6 release
Create new directory for frames:
$ mkdir input/
Split video to frames:
ffmpeg -i stepup.mp4 input/stepup_%04d.png
Start to dedect objects in frames:
python tools/infer.py --weights yolov6n.pt --source input/</description></item><item><title>Convert all FLAC music collection to Apple Lossless (ALAC)</title><link>https://skorotkiewicz.github.io/note/flac-to-alac/</link><pubDate>Wed, 07 Apr 2021 19:46:33 +0200</pubDate><guid>https://skorotkiewicz.github.io/note/flac-to-alac/</guid><description>It preserve the metadata by itself.
To do every flac in a directory:
for f in ./*.flac; do ffmpeg -i &amp;quot;$f&amp;quot; -c:v copy -c:a alac &amp;quot;${f%.*}.m4a&amp;quot;; done mkdir ALAC mv *.m4a ALAC</description></item><item><title>ffmpeg on Raspbian - Raspberry Pi</title><link>https://skorotkiewicz.github.io/techlog/ffmpeg-on-raspbian-raspberry-pi/</link><pubDate>Fri, 30 Sep 2016 16:44:33 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/ffmpeg-on-raspbian-raspberry-pi/</guid><description>First for all we need to build and install x264
git clone --depth 1 git://git.videolan.org/x264 cd x264 ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl make -j 4 sudo make install For mp3 support
wget http://downloads.sourceforge.net/project/lame/lame/3.99/lame-3.99.tar.gz tar xzvf lame-3.99.tar.gz cd lame-3.99 ./configure make make install For Hardware Encoding
add --enable-omx --enable-omx-rpi to ./configure options compile use encoder option -c:v h264_omx Then build and make ffmpeg
git clone --depth=1 git://source.ffmpeg.org/ffmpeg.git cd ffmpeg ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-libmp3lame --enable-nonfree --enable-omx --enable-omx-rpi make -j4 sudo make install ldconfig It takes just 25 minutes on a Raspberry Pi 3.</description></item></channel></rss>