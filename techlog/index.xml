<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Techlogs on Sebastian Korotkiewicz - Tech{{log}}</title><link>https://skorotkiewicz.github.io/techlog/</link><description>Recent content in Techlogs on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Feb 2023 22:25:21 +0200</lastBuildDate><atom:link href="https://skorotkiewicz.github.io/techlog/index.xml" rel="self" type="application/rss+xml"/><item><title>Earth Speed Units (ESU)</title><link>https://skorotkiewicz.github.io/techlog/earth-speed-units/</link><pubDate>Wed, 22 Feb 2023 22:25:21 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/earth-speed-units/</guid><description>ESU is a new unit of measurement for speed that is designed to be more intuitive and user-friendly than traditional units. It is based on the speed of a car traveling at 100 km/h on a level road on the Earth&amp;rsquo;s surface.
Converting from km/h to ESU
To convert a speed from km/h to ESU, you can use the following formula:
ESU = (speed in km/h / 100 km/h) * 1 ESU</description></item><item><title>Start With Yolo V6</title><link>https://skorotkiewicz.github.io/techlog/start-with-yolov6/</link><pubDate>Sat, 02 Jul 2022 19:25:21 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/start-with-yolov6/</guid><description>Create conda environment:
$ conda create -n yolo python=3.8 -y
Activate environment:
$ conda activate yolo
Download repo and install dependencies:
$ git clone https://github.com/meituan/YOLOv6 &amp;amp;&amp;amp; cd YOLOv6 $ pip install -r requirements.txt Download a pretrained model from the YOLOv6 release
Create new directory for frames:
$ mkdir input/
Split video to frames:
ffmpeg -i stepup.mp4 input/stepup_%04d.png
Start to dedect objects in frames:
python tools/infer.py --weights yolov6n.pt --source input/</description></item><item><title>Learning Chmod Permissions in 30 Seconds</title><link>https://skorotkiewicz.github.io/techlog/learning-chmod-permissions-in-30-seconds/</link><pubDate>Thu, 31 Mar 2022 18:05:52 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/learning-chmod-permissions-in-30-seconds/</guid><description>Scary about &amp;ldquo;drwxr-xr-x&amp;rdquo;? Don&amp;rsquo;t worry, in 30 seconds you&amp;rsquo;ll be able to read it!
Chmod always contains three groups, the first is (u)ser, then (g)roup and finally (o)ther (public)
-|rw-|r--|r-x | 1 | 2 | 3 | u | g | o (u)ser: user can (r)ead and (w)rite (g)roup: user in this same group can (r)ead. (o)thers/public: can (r)ead and e(x)ecute. U = User (1) G = Group (2) O = Other (Public) (3) R = Read W = Write X = Execute Give permisions: chmod ugo+rwx hey.</description></item><item><title>Systemd Without Root and with Instances</title><link>https://skorotkiewicz.github.io/techlog/systemd-without-root-instances/</link><pubDate>Sun, 27 Mar 2022 09:43:14 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/systemd-without-root-instances/</guid><description>A user Systemd service should be placed in ~/.config/systemd/user/ directory if you want to have full ownership as normal user. Create it if it doesn’t exist.
mkdir -p ~/.config/systemd/user/ Create a systemd service unit file under the directory. The @ symbol indicates that a substitution will be made. Systemd will take whatever you type after it and replace the variable %i inside the service unit file. The variable can be seen in this excerpt of the SimpleHTTPServer@.</description></item><item><title>Latest projects</title><link>https://skorotkiewicz.github.io/techlog/projects/</link><pubDate>Sun, 18 Apr 2021 00:41:27 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/projects/</guid><description>table { border-collapse: collapse; } thead tr th{ background-color: #eee; } td, thead tr th { padding: 7px; border-top: 1px solid #ccc; } tr:hover { background-color: #eee; } small { float: right; } Project Repo Description boger.js.org - Chat with random strangers send photos talk on video kucos.js.org Github Comments and kudos server for static websites hashchat.js.org Github Chat with person with same tags as you!</description></item><item><title>Quickly install openjdk-8-jre-headless on Debian without apt-get</title><link>https://skorotkiewicz.github.io/techlog/quickly-install-openjdk-8-jre-headless-on-debian-without-apt-get/</link><pubDate>Tue, 10 Nov 2020 08:34:57 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/quickly-install-openjdk-8-jre-headless-on-debian-without-apt-get/</guid><description>Manually installation
wget https://github.com/ojdkbuild/contrib_jdk8u-ci/releases/download/jdk8u212-b04/jdk-8u212-ojdkbuild-linux-x64.zip \ -O /tmp/jdk-8u212-ojdkbuild-linux-x64.zip unzip /tmp/jdk-8u212-ojdkbuild-linux-x64.zip /usr/lib/jvm/ rm /tmp/jdk-8u212-ojdkbuild-linux-x64.zip Add PATH to your .bashrc
export PATH=$PATH:/usr/lib/jvm/jdk-8u212-ojdkbuild-linux-x64/jre/bin Done</description></item><item><title>My GPG setup for developing and more</title><link>https://skorotkiewicz.github.io/techlog/my-gpg-setup-for-developing-and-more/</link><pubDate>Sun, 19 Jul 2020 00:14:17 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/my-gpg-setup-for-developing-and-more/</guid><description>Generating a new GPG key If you don&amp;rsquo;t have your own GPG key yet, it&amp;rsquo;s time to generate one for yourself, you can find a great guide on the GitHub website.
Enter a valid email address!
$ gpg --full-generate-key Telling Git about your GPG key Git supports signing your commits with GPG, we already have our generated key, so we can add it to our Git client so that every new commit is signed with our key.</description></item><item><title>Create a Tor Website with Nginx and PHP</title><link>https://skorotkiewicz.github.io/techlog/create-a-tor-website-with-nginx-and-php/</link><pubDate>Sun, 23 Feb 2020 17:43:31 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/create-a-tor-website-with-nginx-and-php/</guid><description>li { padding-bottom: 5px; } Step 1: Install Debian Prepare Debian to install https packages sudo apt install apt-transport-https Step 2: Install Nginx and PHP sudo apt install nginx php7.3-fpm sudo rm /etc/nginx/sites-enabled/default sudo nano /etc/nginx/sites-enabled/default Add the followings to the new /etc/nginx/sites-enabled/default and save: server { listen 127.0.0.1:8080 default_server; server_name localhost; root /var/www/tor/public; index index.php index.html index.htm; server_tokens off; location / { allow 127.0.0.1; deny all; try_files $uri $uri/ /index.</description></item><item><title>Isso comments system on Debian</title><link>https://skorotkiewicz.github.io/techlog/isso-comments-system-on-debian/</link><pubDate>Mon, 28 Oct 2019 03:42:44 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/isso-comments-system-on-debian/</guid><description>Add isso user
useradd isso and then mkdir /home/isso/ then su - isso
Install isso with pip
pip install isso Config files cat /etc/systemd/system/isso.service
[Unit] Description=isso server [Service] User=isso Environment=&amp;quot;ISSO_SETTINGS=/home/isso/config/isso.conf&amp;quot; ExecStart=/home/isso/.local/bin/isso -c $ISSO_SETTINGS run [Install] WantedBy=multi-user.target cat /home/isso/config/isso.conf
[general] dbpath = /home/isso/database/comments.db host = https://sebastian.korotkiewicz.eu/ [server] listen = http://127.0.0.1:8000/ [guard] enabled = true ratelimit = 2 direct-reply = 3 reply-to-self = true require-author = true require-email = false [markup] options = strikethrough, superscript, autolink, highlight, quote, underline, math, math-explicit allowed-elements = allowed-attributes = cat /etc/nginx/sites-enabled/comments.</description></item><item><title>Install Searx on Apache2 and uWSGI</title><link>https://skorotkiewicz.github.io/techlog/install-searx-on-apache2-and-uwsgi/</link><pubDate>Wed, 09 Oct 2019 04:03:39 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/install-searx-on-apache2-and-uwsgi/</guid><description>uwsgi Install packages:
sudo apt-get install uwsgi uwsgi-plugin-python Add searx user:
useradd searx Create the configuration file /etc/uwsgi/apps-enabled/searx.ini with this content:
[uwsgi] # Who will run the code uid = searx gid = searx # Number of workers (usually CPU count) workers = 4 # The right granted on the created socket chmod-socket = 666 # Plugin to use and interpretor config single-interpreter = true master = true plugin = python3 lazy-apps = true enable-threads = true # Module to import module = searx.</description></item><item><title>Automated Let's Encrypt Wildcard Certificates with local BIND</title><link>https://skorotkiewicz.github.io/techlog/automated-lets-encrypt-wildcard-certificates-with-local-bind/</link><pubDate>Tue, 28 May 2019 15:36:10 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/automated-lets-encrypt-wildcard-certificates-with-local-bind/</guid><description>Let&amp;rsquo;s Encrypt has recently started offering free wildcard certificates. Requirements:
The client must speak the ACME protocol v02 - the current Certbot &amp;gt;= 0.28 fulfills this, as well as Authentication takes place via DNS While other authentications (via web server, standalone, etc.) are quite easy to automate, it&amp;rsquo;s a bit more difficult with DNS: For authorization you have to set a random string - given by the client - into a DNS text record, which looks like this:</description></item><item><title>Stream Live with Nginx</title><link>https://skorotkiewicz.github.io/techlog/stream-live-with-nginx/</link><pubDate>Sun, 26 May 2019 22:39:51 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/stream-live-with-nginx/</guid><description>Prepare working directory mkdir stream-live &amp;amp;&amp;amp; cd stream-live Download nginx Latest nginx can be downloaded from this page.
wget http://nginx.org/download/nginx-1.14.0.tar.gz tar -xf nginx-1.14.0.tar.gz Download modules git clone https://github.com/sergey-dryabzhinsky/nginx-rtmp-module.git git clone https://github.com/kaltura/nginx-vod-module Compile nginx cd nginx-1.14.0 ./configure --with-http_ssl_module --with-http_stub_status_module --add-module=/path/to/nginx-rtmp-module/ --add-module=/path/to/nginx-vod-module --prefix=/usr/local/nginx-streaming/ make -j 1 make install Configure nginx for stream video with hls via http and rtmp cd /usr/local/nginx-streaming/conf ; nano nginx.conf
worker_processes auto; events { worker_connections 1024; } # RTMP configuration rtmp { server { listen 1935; # Listen on standard RTMP port chunk_size 4000; application show { live on; record off; hls on; hls_path /mnt/hls/; hls_fragment 5; on_publish http://pass.</description></item><item><title>Stream VoD with Nginx</title><link>https://skorotkiewicz.github.io/techlog/stream-vod-with-nginx/</link><pubDate>Sat, 09 Feb 2019 19:57:34 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/stream-vod-with-nginx/</guid><description>Prepare working directory mkdir stream &amp;amp;&amp;amp; cd stream
Download nginx Latest nginx can be downloaded from this page.
wget http://nginx.org/download/nginx-1.14.0.tar.gz
tar -xf nginx-1.14.0.tar.gz
Download modules git clone https://github.com/sergey-dryabzhinsky/nginx-rtmp-module.git
git clone https://github.com/kaltura/nginx-vod-module
Compile nginx cd nginx-1.14.0
./configure --with-http_ssl_module --add-module=/path/to/nginx-rtmp-module/ --add-module=/path/to/nginx-vod-module --prefix=/usr/local/nginx-streaming/
make -j 1
make install
Configure nginx for stream video files with hls via http cd /usr/local/nginx-streaming/conf ; nano nginx.conf
worker_processes auto; events { use epoll; } #enable stream vod on rtmp if you want this #rtmp { # server { # listen 1935; # # chunk_size 4000; # # # video on demand for mp4 files # application vod2 { # play /var/mp4s; # } # } #} http { log_format main &amp;#39;$remote_addr $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39; &amp;#39;$status &amp;#34;$http_referer&amp;#34; &amp;#34;$http_user_agent&amp;#34;&amp;#39;; default_type application/octet-stream; include /usr/local/nginx-streaming/conf/mime.</description></item><item><title>"Bash Here" Context Menu in Windows Explorer</title><link>https://skorotkiewicz.github.io/techlog/bash-here-context-menu-in-windows-explorer/</link><pubDate>Sun, 16 Dec 2018 07:54:26 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/bash-here-context-menu-in-windows-explorer/</guid><description>Here for bash
Windows Registry Editor Version 5.00
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu Bash Here]
@=&amp;quot;ConEmu Bash Here&amp;quot;
&amp;quot;Icon&amp;quot;=&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe,0&amp;quot;
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu Bash Here\command]
@=&amp;quot;\&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe\&amp;quot; -here -run {bash} -cur_console:n&amp;quot;
Here for cmd
Windows Registry Editor Version 5.00
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu CMD Here]
@=&amp;quot;ConEmu CMD Here&amp;quot;
&amp;quot;Icon&amp;quot;=&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe,0&amp;quot;
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu CMD Here\command]
@=&amp;quot;\&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe\&amp;quot; -here -run {cmd} -cur_console:n&amp;quot;
Remember to change the path to ConEmu installation and rename the username to your own</description></item><item><title>Compare `git add .` vs `git add -A`</title><link>https://skorotkiewicz.github.io/techlog/compare-git-add-.-vs-git-add-a/</link><pubDate>Wed, 12 Dec 2018 06:11:23 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/compare-git-add-.-vs-git-add-a/</guid><description>Both of these will stage all files, including new files (which git commit -a misses) and deleted files.
The difference is that git add -A also stages files in higher directories that still belong to the same git repository. Here&amp;rsquo;s an example:
/my-repo
.git/
subfolder/
nestedfile.txt
rootfile.txt
If your current working directory is /my-repo, and that&amp;rsquo;s the root of this git repo (thus the .git/ folder), these two commands will do the same thing.</description></item><item><title>Activate tap to click on touchpad</title><link>https://skorotkiewicz.github.io/techlog/activate-tap-to-click-on-touchpad/</link><pubDate>Sat, 08 Dec 2018 19:52:54 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/activate-tap-to-click-on-touchpad/</guid><description>Debian Stretch / Arch Linux Remove the xserver-xorg-input-synaptics package. (important)
# apt remove xserver-xorg-input-synaptics
## Arch
[root@arch ~]# pacman -Ss libinput
extra/libinput 1.12.3-1 [installed]
Input device management and event handling library
extra/xf86-input-libinput 0.28.1-1 (xorg-drivers) [installed]
Generic input driver for the X.Org server based on libinput
Install xserver-xorg-input-libinput:
## Debian
# apt install xserver-xorg-input-libinput
In most cases, make sure you have the xserver-xorg-input-libinput package installed, and not the xserver-xorg-input-synaptics package.</description></item><item><title>Show percentage of already started DD</title><link>https://skorotkiewicz.github.io/techlog/show-percentage-of-already-started-dd/</link><pubDate>Sun, 23 Sep 2018 11:20:07 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/show-percentage-of-already-started-dd/</guid><description>To get started, install the pv package: pacman -S pv
Run dd, then, in a separate shell, invoke the following command:
sudo pv -d $(pidof dd) or start over from the beginning :
pv /path/to/isofile | sudo dd of=/dev/sdX</description></item><item><title>Create ddns on your current bind9 server</title><link>https://skorotkiewicz.github.io/techlog/create-ddns-on-your-current-bind9-server/</link><pubDate>Tue, 11 Sep 2018 22:09:57 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/create-ddns-on-your-current-bind9-server/</guid><description>Tasks. We have example.com server with bing9 server.
At home we have a server with dynamic IP.
Pin the dynamic IP to your own server. -&amp;gt; home.example.com
Server The document asserts a working BIND setup already in place. Installing and configuring BIND is out of scope here.
Creating a key-pair To create a key-pair, we&amp;rsquo;ll be using dnssec-keygen.
server$ dnssec-keygen -a HMAC-SHA512 -b 512 -n USER home.example.com. This creates two files, which will be named differently based on individual runs.</description></item><item><title>Create user, datebase and grant permission in MySQL/PostgreSQL</title><link>https://skorotkiewicz.github.io/techlog/create-user-datebase-and-grant-permission-in-mysql/postgresql/</link><pubDate>Sat, 08 Sep 2018 20:14:53 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/create-user-datebase-and-grant-permission-in-mysql/postgresql/</guid><description>MySQL 1.Login to MySQL
mysql -u root -p
2.Create new user
CREATE USER 'forum'@'localhost' IDENTIFIED BY 'password';
3.Create datebase for user
CREATE DATABASE forum;
4.Grant all permission for user datebase
GRANT ALL PRIVILEGES ON forum.* TO 'forum'@'localhost';
PostgreSQL 1.Creating user
sudo -u postgres createuser &amp;lt;username&amp;gt;
2.Creating Database
sudo -u postgres createdb &amp;lt;dbname&amp;gt;
3.Giving the user a password
sudo -u postgres psql
psql=# alter user &amp;lt;username&amp;gt; with encrypted password '&amp;lt;password&amp;gt;';
4.Granting privileges on database</description></item><item><title>Gitlab with Apache2 Reverse Proxy</title><link>https://skorotkiewicz.github.io/techlog/gitlab-with-apache2-reverse-proxy/</link><pubDate>Mon, 25 Jun 2018 20:02:13 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/gitlab-with-apache2-reverse-proxy/</guid><description>This is my config for gitlab with apache2 reverse proxy, Web IDE works!
&amp;lt;VirtualHost *:80&amp;gt;
ServerName gitlab.itunix.eu
ServerAlias gitlab.itunix.eu mt.itunix.eu www.gitlab.itunix.eu www.mt.itunix.eu
ServerAdmin skorotkiewicz@gmail.com
RewriteEngine on
ReWriteCond %{SERVER_PORT} !^443$
RewriteRule ^/(.*) https://gitlab.itunix.eu/$1 [NC,R,L]
&amp;lt;/VirtualHost&amp;gt;
&amp;lt;VirtualHost *:443&amp;gt;
ServerName gitlab.itunix.eu
ServerAlias gitlab.itunix.eu www.gitlab.itunix.eu
ServerAdmin skorotkiewicz@gmail.com
ProxyPass / http://localhost:1234/ nocanon
ProxyPassReverse / http://localhost:1234/
ProxyPreserveHost On
AllowEncodedSlashes NoDecode
SSLEngine on
SSLCertificateFile /etc/letsencrypt/live/itunix.eu-0001/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/itunix.eu-0001/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/itunix.eu-0001/fullchain.pem
ErrorLog /var/log/apache2/error_gitlab.log
CustomLog /var/log/apache2/access_gitlab.log combined
&amp;lt;/VirtualHost&amp;gt;</description></item><item><title>Fix GitLab is taking too much time to respond. 502 Error</title><link>https://skorotkiewicz.github.io/techlog/fix-gitlab-is-taking-too-much-time-to-respond.-502-error/</link><pubDate>Sat, 09 Jun 2018 19:23:43 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/fix-gitlab-is-taking-too-much-time-to-respond.-502-error/</guid><description>Solution by iamchanghyunpark
&amp;ldquo;I checked the pid value in the log and checked if there was a running process with the same pid, and no there was none.
I&amp;rsquo;m guessing this is because of the unexpected powerdown, and unicorn.pid was not properly cleared.
My solution was simple&amp;rdquo;
docker-compose exec gitlab bash
vi log/unicorn.stderr.log # remove the value (which is the pid), save and exit
exit # from the bash shell of the gitlab container
#Now restart the containers
docker-compose down
docker-compose up -d</description></item><item><title>Homeautomation - detect presence of Wifi devices</title><link>https://skorotkiewicz.github.io/techlog/homeautomation-detect-presence-of-wifi-devices/</link><pubDate>Sat, 02 Jun 2018 20:12:51 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/homeautomation-detect-presence-of-wifi-devices/</guid><description>A simple shell script to detect presence of Wifi devices (smartphones, tablets, Amazon Dash Buttons, ..) and post the results via MQTT. This information can be processed in Homeautomation Systems to turn down the heating when everyone left the appartment.
Install the MQTT client on your Router Install the packages with opkg opkg install mosquitto-client opkg install coreutils-nohup or with luci.
Copy over the script Use SCP to copy the presence_report script to /usr/bin/presence_report on the target device.</description></item><item><title>Minio: How's bucket policy related to anonymous/authorized access?</title><link>https://skorotkiewicz.github.io/techlog/minio-hows-bucket-policy-related-to-anonymous/authorized-access/</link><pubDate>Fri, 30 Mar 2018 23:50:35 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/minio-hows-bucket-policy-related-to-anonymous/authorized-access/</guid><description>thanks Cumbu from stackoverflow.com!
&amp;lsquo;public&amp;rsquo; is valid policy&amp;hellip;
You can change this policy: install mc (minio client) and then:
# list default hosts after install: mc config host ls # remove all hosts: mc config host rm {hostName} mc config host rm local # add your host: mc config host add {hostName} {url} {apiKey} {apiSecret} mc config host add local http://127.0.0.1:9000 ClientIdASSDSD ClientSecretASASASdsasdasdasdasd # create bucket: mc mb {host}/{bucket} mc mb local/mybucket # change bucket policy: mc policy {policy} {host}/{bucket} mc policy public local/mybucket</description></item><item><title>LEDE /OpenWRT on USB Stick</title><link>https://skorotkiewicz.github.io/techlog/lede-/openwrt-on-usb-stick/</link><pubDate>Sat, 24 Mar 2018 01:23:49 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/lede-/openwrt-on-usb-stick/</guid><description>Prepare your USB Stick: mkfs.ext4 /dev/sda1
Install pacages on your router
opkg update; opkg install block-mount kmod-usb-core kmod-usb-ohci kmod-usb-storage kmod-usb2 kmod-scsi-core kmod-scsi-generic kmod-fs-ext4 libblkid Plug your USB Stick into your router
mount /dev/sda1 /mnt tar -C /overlay -cvf - . | tar -C /mnt -xf - umount /mnt Edit fstab
block detect &amp;gt; /etc/config/fstab vim /etc/config/fstab Config:
root@LEDE:~# cat /etc/config/fstab config 'global' option anon_swap '0' option anon_mount '0' option auto_swap '1' option auto_mount '1' option delay_root '5' option check_fs '0' config 'mount' option target '/overlay' option uuid '&amp;lt;uuid&amp;gt;' option enabled '1' option fstype 'ext4' Set the target to /overlay, and change the option enabled line from 0 to 1.</description></item><item><title>Creating Wildcard SSL Certificates with Let’s Encrypt</title><link>https://skorotkiewicz.github.io/techlog/creating-wildcard-ssl-certificates-with-lets-encrypt/</link><pubDate>Fri, 16 Mar 2018 17:59:48 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/creating-wildcard-ssl-certificates-with-lets-encrypt/</guid><description>Install certbot: wget https://dl.eff.org/certbot-auto chmod a+x ./certbot-auto ./certbot-auto Get a certificate ./certbot-auto certonly \ --server https://acme-v02.api.letsencrypt.org/directory \ --manual --preferred-challenges dns -d *.itunix.eu An important parameter to notice is --server https://acme-v02.api.letsencrypt.org/directory, which will instruct the certbot client to use v2 of the Let&amp;rsquo;s Encrypt API (we need that for wildcard certs).
Add DNS TXT record _acme-challenge.itunix.eu. IN TXT &amp;quot;XXXX&amp;quot; After add you should verify that it is working using nslookup</description></item><item><title>Reinstall all packages with --force on Arch</title><link>https://skorotkiewicz.github.io/techlog/reinstall-all-packages-with-force-on-arch/</link><pubDate>Sun, 11 Mar 2018 22:08:46 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/reinstall-all-packages-with-force-on-arch/</guid><description>Here is simple solution
pacman -Qqen &amp;gt; pkglist.txt pacman --force -S $(&amp;lt; pkglist.txt) mkinitcpio -p linux</description></item><item><title>Create an encrypted file container with dm-crypt</title><link>https://skorotkiewicz.github.io/techlog/create-an-encrypted-file-container-with-dm-crypt/</link><pubDate>Sun, 11 Mar 2018 14:32:13 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/create-an-encrypted-file-container-with-dm-crypt/</guid><description>Create an empty file with the size of your container
dd if=/dev/zero bs=1M count=100 of=~/my-container.img Here I’ll use a 100MB container
Initialise the LUKS partition on the file and set the initial passphrase.
cryptsetup luksFormat ~/mycontainer Open the container. Opening the container creates a kernel device file which can then be mounted.
cryptsetup luksOpen ~/mycontainer secret-device This command will prompt for the container’s passphrase and then create a device file with the name /dev/mapper/secret-device.</description></item><item><title>Building windows go programs on linux</title><link>https://skorotkiewicz.github.io/techlog/building-windows-go-programs-on-linux/</link><pubDate>Sun, 18 Feb 2018 13:54:53 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/building-windows-go-programs-on-linux/</guid><description>$ cat hello.go
package main import &amp;#34;fmt&amp;#34; func main() { fmt.Printf(&amp;#34;Hello\n&amp;#34;) } $ GOOS=windows GOARCH=386 go build -o hello.exe hello.go</description></item><item><title>Rename a part of filename of a bunch of files</title><link>https://skorotkiewicz.github.io/techlog/rename-a-part-of-filename-of-a-bunch-of-files/</link><pubDate>Fri, 19 Jan 2018 15:08:37 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/rename-a-part-of-filename-of-a-bunch-of-files/</guid><description>Example $ ls -l AndroidTest.pdf Angular2Test.pdf BashTest.pdf The simplest way to remove &amp;lsquo;Test&amp;rsquo; from any files: rename &amp;#39;s/Test//g&amp;#39; *.pdf $ ls -l Android.pdf Angular2.pdf Bash.pdf Or change &amp;lsquo;Test&amp;rsquo; to &amp;lsquo;Hello&amp;rsquo; rename &amp;#39;s/Test/Hello/g&amp;#39; *.pdf $ ls -l AndroidTest.pdf Angular2Test.pdf BashTest.pdf</description></item><item><title>Switch PHP version</title><link>https://skorotkiewicz.github.io/techlog/switch-php-version/</link><pubDate>Wed, 10 Jan 2018 02:29:44 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/switch-php-version/</guid><description>From php5.6 to php7.0: Apache:
sudo a2dismod php5.6 ; sudo a2enmod php7.0 ; sudo service apache2 restart CLI:
sudo update-alternatives --set php /usr/bin/php7.0 From php7.0 to php5.6: Apache:
sudo a2dismod php7.0 ; sudo a2enmod php5.6 ; sudo service apache2 restart CLI:
sudo update-alternatives --set php /usr/bin/php5.6</description></item><item><title>Jak ugotować jajko idealne</title><link>https://skorotkiewicz.github.io/techlog/jak-ugotowa%C4%87-jajko-idealne/</link><pubDate>Sun, 24 Dec 2017 15:33:29 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/jak-ugotowa%C4%87-jajko-idealne/</guid><description>Ważne jest, by jajka osiągnęły temperaturę pokojową, zanim zaczniemy je gotować. Gdybyśmy bowiem wrzucili je do gorącej wody prosto z lodówki, mogłyby popękać ich skorupka. Z tego samego powodu powinniśmy użyć małego rondelka i trzymać go na wolnym ogniu.
Jak długo powinniśmy gotować jajka?
Wszystko zależy bowiem od tego, jaki efekt chcemy uzyskać. Niektórzy z nas wolą jajka bardziej wodniste, inni lubią, gdy biało jest już lekko ścięte. Dlatego, zamiast stosować się do zaleceń z książki kucharskiej czy internetu, najlepiej samemu wypróbować ze stoperem, jaki czas gotowania będzie najlepszy, by jajko trafiało w nasze gusta.</description></item><item><title>How to add a Windows Firewall rule to enable client-to-client communication through OpenVPN</title><link>https://skorotkiewicz.github.io/techlog/how-to-add-a-windows-firewall-rule-to-enable-client-to-client-communication-through-openvpn/</link><pubDate>Sat, 09 Dec 2017 23:18:20 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/how-to-add-a-windows-firewall-rule-to-enable-client-to-client-communication-through-openvpn/</guid><description>Open PowerShell with Administrator Privileges and type:
check the path to your openvpn.exe! New-NetFirewallRule -DisplayName “OpenVPN allow Inbound” -Direction Inbound -Program %ProgramFiles%\OpenVPN\bin\openvpn.exe -RemoteAddress LocalSubnet -Action Allow New-NetFirewallRule -DisplayName “OpenVPN allow Outbound” -Direction Outbound -Program %ProgramFiles%\OpenVPN\bin\openvpn.exe -RemoteAddress LocalSubnet -Action Allow Set-NetFirewallProfile Public -DefaultInboundAction Allow -DefaultOutboundAction Allow from now every connected client should be able to ping you
Optional: To see if it has been added open Windows Defender Firewall: wf.msc.
that's all</description></item><item><title>A puzzle for 5 bitcoins</title><link>https://skorotkiewicz.github.io/techlog/a-puzzle-for-5-bitcoins/</link><pubDate>Wed, 06 Dec 2017 18:31:18 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/a-puzzle-for-5-bitcoins/</guid><description>A few years ago a multilevel puzzle was published, in which there were 4.87 BTCs to win, now it was the last level and collected already 5BTC, calculated at the current rate of over $62770.00.
The following image contains a private key to the address 1FLAMEN6rq2BqMqMnkUmsJBqCGWdwgVKcegd, the key will allow you to transfer the funds accumulated on it and use them for any purpose. Maybe someone will be able to brainstorm, reach a solution and make a little gift for a Christmas.</description></item><item><title>Remove all of the diacritics from a file</title><link>https://skorotkiewicz.github.io/techlog/remove-all-of-the-diacritics-from-a-file/</link><pubDate>Fri, 24 Nov 2017 16:29:35 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/remove-all-of-the-diacritics-from-a-file/</guid><description>I like iconv as it handles all accents variations :
cat non-ascii.txt | iconv -f utf8 -t ascii//TRANSLIT//IGNORE &amp;gt; ascii.txt</description></item><item><title>Facebook watches our messages from messenger.</title><link>https://skorotkiewicz.github.io/techlog/facebook-watches-our-messages-from-messenger./</link><pubDate>Mon, 06 Nov 2017 22:27:26 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/facebook-watches-our-messages-from-messenger./</guid><description>How to get a 72h ban in a second after sending a message. By sending this exact photo to someone, we get a 72h ban (automatically?).</description></item><item><title>Configure mosquitto to use websockets</title><link>https://skorotkiewicz.github.io/techlog/configure-mosquitto-to-use-websockets/</link><pubDate>Sun, 05 Nov 2017 01:51:12 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/configure-mosquitto-to-use-websockets/</guid><description>Add the following lines to /etc/mosquitto/mosquitto.conf in the &amp;ldquo;Default Listener&amp;rdquo; section: port 1883 listener 9001 protocol websockets</description></item><item><title>Docker - How to cleanup (unused) resources</title><link>https://skorotkiewicz.github.io/techlog/docker-how-to-cleanup-unused-resources/</link><pubDate>Mon, 09 Oct 2017 16:48:43 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/docker-how-to-cleanup-unused-resources/</guid><description>Once in a while, you may need to cleanup resources (containers, volumes, images, networks) &amp;hellip;
delete volumes // see: https://github.com/chadoe/docker-cleanup-volumes
$ docker volume rm $(docker volume ls -qf dangling=true)
$ docker volume ls -qf dangling=true | xargs -r docker volume rm
delete networks $ docker network ls
$ docker network ls | grep &amp;quot;bridge&amp;quot;
$ docker network rm $(docker network ls | grep &amp;quot;bridge&amp;quot; | awk '/ / { print $1 }')
remove docker images // see: http://stackoverflow.</description></item><item><title>fun with a friend's postcard</title><link>https://skorotkiewicz.github.io/techlog/fun-with-a-friends-postcard/</link><pubDate>Wed, 04 Oct 2017 17:08:44 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/fun-with-a-friends-postcard/</guid><description>encryption of the message into zlib from codecs import encode from functools import reduce print reduce(encode, (&amp;#39;utf8&amp;#39;, &amp;#39;zlib&amp;#39;, &amp;#39;hex&amp;#39;), &amp;#34;this is my message on the postcard&amp;#34;) #output: 789c2bc9c82c5600a2dc4a85dcd4e2e2c4f45485fc3c85928c548582fce292e4c4a21400da1a0c9e output hex, save to file post.txt
78 9c 2b c9 c8 2c 56 00 a2 dc 4a
85 dc d4 e2 e2 c4 f4 54 85 fc 3c
85 92 8c 54 85 82 fc e2 92 e4 c4
a2 14 00 da 1a 0c 9e
decryption of the message d = open(&amp;#34;post.</description></item><item><title>Dysleksja</title><link>https://skorotkiewicz.github.io/techlog/dysleksja/</link><pubDate>Tue, 12 Sep 2017 16:53:50 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/dysleksja/</guid><description>Przyjaciel z dysleksją opisał mi, jak odczuwa czytanie lektury. Potrafi czytać, ale to wymaga sporej koncentracji, a litery wydają się &amp;ldquo;przeskakiwać&amp;rdquo;.
Pamiętam jak czytałem artykuł o typoglikemii. Pomyślałem, pewnie można to zrobić interaktywnie na stronie z Javascriptem? Z pewnością tak.
Dysleksja charakteryzuje się trudnościami w nauce płynnego czytania i dokładnego rozumienia tekstu, mimo normalnej inteligencji. Obejmuje to trudności w zakresie świadomości fonologicznej, dekodowania fonologicznego, szybkości przetwarzania, kodowania ortograficznego, słuchowej pamięci krótkotrwałej, umiejętności językowych/zrozumienia słownego i/lub szybkiego nazywania.</description></item><item><title>Radio station with RDS function on Raspberry Pi</title><link>https://skorotkiewicz.github.io/techlog/radio-station-with-rds-function-on-raspberry-pi/</link><pubDate>Mon, 04 Sep 2017 01:18:06 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/radio-station-with-rds-function-on-raspberry-pi/</guid><description>Today I will demonstrate you how to install the FM radio transmitter on Raspberry Pi. It is not just a transmitter! It supports RDS function with all its options (PS, RT, TA/TP). So do it!
The only thing we need to know is that the transmitter needs an antenna. Of course, you can broadcast from GPIO goldpin, but the range of such a solution is barely a few meters. Simply attach the short cables to the GPIO4 (4 pin inside) to extend the range up to a hundred meters.</description></item><item><title>Convert Mercurial project to Git</title><link>https://skorotkiewicz.github.io/techlog/convert-mercurial-project-to-git/</link><pubDate>Mon, 28 Aug 2017 04:35:53 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/convert-mercurial-project-to-git/</guid><description>I&amp;rsquo;m using fast-export:
cd ~
git clone https://github.com/frej/fast-export.git
git init git_repo
cd git_repo
~/fast-export/hg-fast-export.sh -r /path/to/old/mercurial_repo
git checkout HEAD
source: https://stackoverflow.com/questions/16037787/convert-mercurial-project-to-git</description></item><item><title>Simple start with YOLO v2</title><link>https://skorotkiewicz.github.io/techlog/simple-start-with-yolo-v2/</link><pubDate>Tue, 22 Aug 2017 17:14:30 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/simple-start-with-yolo-v2/</guid><description>reduce frames to 15 per sec:
# ffmpeg -i stepup.mp4 -r 15 stepup15.mp4
make new directory for frames and put to stepup/ a video to split
#mkdir stepup/; mkdir yolo_stepup/
split to frames:
# ffmpeg -i stepup15.mp4 stepup_%04d.png
lets begin the games!
run this script, make sure are you not in stepup/, you shold be in darknet/
#!/bin/bash
for file in stepup/*.png
do
./darknet detect cfg/yolo.cfg cfg/yolo.weights &amp;quot;$file&amp;quot;
mv predictions.</description></item><item><title>Useful keyboard shortcuts for terminal</title><link>https://skorotkiewicz.github.io/techlog/useful-keyboard-shortcuts-for-terminal/</link><pubDate>Mon, 10 Jul 2017 16:42:08 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/useful-keyboard-shortcuts-for-terminal/</guid><description>Terminal clipboard, check it out :)
ctrl + u = Cut to the clipboard
ctrl + y = Paste from the clipboard</description></item><item><title>Debian 9: Change the network from enp3s0 to eth0</title><link>https://skorotkiewicz.github.io/techlog/debian-9-change-the-network-from-enp3s0-to-eth0/</link><pubDate>Wed, 05 Jul 2017 16:17:32 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/debian-9-change-the-network-from-enp3s0-to-eth0/</guid><description>nano /etc/udev/rules.d/10-network.rules
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, ATTR{address}==&amp;quot;08:00:27:a6:ad:0e&amp;quot;, NAME=&amp;quot;eth0&amp;quot;
SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, ATTR{address}==&amp;quot;08:00:27:6e:77:cc&amp;quot;, NAME=&amp;quot;wlan0&amp;quot;
then reboot.</description></item><item><title>1998 vs 2017</title><link>https://skorotkiewicz.github.io/techlog/1998-vs-2017/</link><pubDate>Sat, 01 Jul 2017 14:53:46 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/1998-vs-2017/</guid><description>1998: Don&amp;rsquo;t get into strangers&amp;rsquo;s cars Don&amp;rsquo;t meet people from the internet 2017: Literally summon strangers from the internet to get into their car</description></item><item><title>Quick way to add new posts in Jekyll with Python</title><link>https://skorotkiewicz.github.io/techlog/quick-way-to-add-new-posts-in-jekyll-with-python/</link><pubDate>Sat, 01 Jul 2017 00:54:18 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/quick-way-to-add-new-posts-in-jekyll-with-python/</guid><description>To make life a little easier
from datetime import datetime MYPOST = &amp;#34;&amp;#34;&amp;#34;\ --- layout: post title: &amp;#34;{0}&amp;#34; date: {1} +0200 categories: {2} --- here my text &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#34;__main__&amp;#34;: title = raw_input(&amp;#34;Title:\n&amp;#34;) categories = raw_input(&amp;#34;Categories:\n&amp;#34;) if not categories: categories = &amp;#34;posts&amp;#34; timestamp = datetime.today().strftime(&amp;#34;%Y-%m-%d%H:%M:%S&amp;#34;) datestamp = datetime.today().strftime(&amp;#34;%Y-%m-%d&amp;#34;) filename = datestamp + &amp;#34;-&amp;#34; + &amp;#34;-&amp;#34;.join(title.split(&amp;#34; &amp;#34;)) + &amp;#34;.md&amp;#34; filename = filename.lower() with open(filename, &amp;#34;w+&amp;#34;) as file: file.write(MYPOST.format(title, timestamp, categories))</description></item><item><title>Mark Zuckerberg says 'Facebook has 2 billion people!'</title><link>https://skorotkiewicz.github.io/techlog/mark-zuckerberg-says-facebook-has-2-billion-people/</link><pubDate>Wed, 28 Jun 2017 14:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/mark-zuckerberg-says-facebook-has-2-billion-people/</guid><description>Mark Zuckerberg officially announced that over 2 billion people in the world have a Facebook account
As of this morning, the Facebook community is now officially 2 billion people!
We&amp;rsquo;re making progress connecting the world, and now let&amp;rsquo;s bring the world closer together.
It&amp;rsquo;s an honor to be on this journey with you.</description></item><item><title>Nagios with Nginx</title><link>https://skorotkiewicz.github.io/techlog/nagios-with-nginx/</link><pubDate>Mon, 26 Jun 2017 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/nagios-with-nginx/</guid><description>server { listen 80; server_name my.example.com; access_log /var/log/nginx/nagios.access.log; error_log /var/log/nginx/nagios.error.log info; expires 31d; #rewrite ^/nagios3/(.*)$ /$1 break; rewrite ^/nagios3/(.*)$ /$1; root /usr/share/nagios3/htdocs; index index.php index.html; auth_basic &amp;#34;Nagios Restricted Access&amp;#34;; auth_basic_user_file /etc/nagios3/htpasswd.users; location /stylesheets { alias /etc/nagios3/stylesheets; } location ~ \.cgi$ { root /usr/lib/cgi-bin/nagios3; rewrite ^/cgi-bin/nagios3/(.*)$ /$1; include /etc/nginx/fastcgi_params; fastcgi_param AUTH_USER $remote_user; fastcgi_param REMOTE_USER $remote_user; fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/nagios3$fastcgi_script_name; fastcgi_pass unix:/var/run/fcgiwrap.socket; } location ~ \.php$ { try_files $uri =404; fastcgi_split_path_info ^(.+\.php)(/.+)$; fastcgi_pass unix:/var/run/php5-fpm.</description></item><item><title>Windows on Bash // GUI!</title><link>https://skorotkiewicz.github.io/techlog/windows-on-bash-/-gui/</link><pubDate>Mon, 26 Jun 2017 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/windows-on-bash-/-gui/</guid><description>Download VcXsrv (or any other X server) and run it.
Launch Bash and type in the following lines
# sudo apt-get install xorg xubuntu-desktop
# echo 'export DISPLAY=:0' &amp;gt;&amp;gt; ~/.bashrc &amp;amp;&amp;amp; . ~/.bashrc
# sudo sed -i 's$&amp;lt;listen&amp;gt;.*&amp;lt;/listen&amp;gt;$&amp;lt;listen&amp;gt;tcp:host=localhost,port=0&amp;lt;/listen&amp;gt;$' /etc/dbus-1/session.conf
Close Bash and open it, then type in xfce4-session , if everything went right then the XFCE interface should show up in your X server window.</description></item><item><title>Deploy Jekyll Blog with Git</title><link>https://skorotkiewicz.github.io/techlog/deploy-jekyll-blog-with-git/</link><pubDate>Mon, 26 Jun 2017 00:53:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/deploy-jekyll-blog-with-git/</guid><description>Local Installation Install jekyll gem install jekyll
Creating a Blog Navigate to wherever you want to store your blog files on your local machine, and create a new blog like so:
jekyll new awesomeblog
This will create an awesomeblog directory containing the configuration files, posts directory and other required bits. Now you can change to that directory and fire up a server process to preview it in your browser.
cd awesomeblog
jekyll serve
Jekyll will build your blog, and after a few seconds you should be able to visit http://localhost:4000 in your browser.</description></item><item><title>How to edit file in a docker container?</title><link>https://skorotkiewicz.github.io/techlog/how-to-edit-file-in-a-docker-container/</link><pubDate>Sat, 20 May 2017 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/how-to-edit-file-in-a-docker-container/</guid><description>As in the comments, there&amp;rsquo;s no default editor set - strange - $EDITOR env variable is empty. You can login into container with:
docker exec -it &amp;lt;container&amp;gt; bash and run:
apt-get update
apt-get install vim
or use the following Dockerfile:
FROM confluent/postgres-bw:0.1
RUN [&amp;quot;apt-get&amp;quot;, &amp;quot;update&amp;quot;]
RUN [&amp;quot;apt-get&amp;quot;, &amp;quot;install&amp;quot;, &amp;quot;-y&amp;quot;, &amp;quot;vim&amp;quot;]
EDIT
Docker images are delivered trimmed to bare minimum - so no editor is installed with the shipped container. That&amp;rsquo;s why there&amp;rsquo;s a need to install it manually.</description></item><item><title>Raspberry Alexa</title><link>https://skorotkiewicz.github.io/techlog/raspberry-alexa/</link><pubDate>Thu, 20 Apr 2017 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/raspberry-alexa/</guid><description>sudo raspi-config
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install git
git clone git://git.drogon.net/wiringPi
cd wiringPi
./build
cd ~
git clone https://github.com/alexa/alexa-avs-sample-app.git
cd alexa-avs-sample-app
nano automated_install.sh
. automated_install.sh
cd ~
cd alexa-avs-sample-app/samples/companionService
npm start
Second window cd alexa-avs-sample-app/samples/javaclient
mvn exec:exec
Third window cd alexa-avs-sample-app/samples/wakeWordAgent/src
./wakeWordAgent -e sensory</description></item><item><title>Roll Own VPN AdBlock Service</title><link>https://skorotkiewicz.github.io/techlog/roll-own-vpn-adblock-service/</link><pubDate>Mon, 10 Apr 2017 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/roll-own-vpn-adblock-service/</guid><description>It&amp;rsquo;s actually super cheap &amp;amp; easy. The setup below costs a few dollars a year and uses ~20MB RAM total:
Get a VPN Provider Install OpenVPN &amp;amp; setup client certs with https://github.com/Nyr/openvpn-install Setup your hosts file with http://winhelp2002.mvps.org/hosts.txt</description></item><item><title>nginx + cgit + debian = one host</title><link>https://skorotkiewicz.github.io/techlog/nginx-cgit-debian-one-host/</link><pubDate>Fri, 20 Jan 2017 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/nginx-cgit-debian-one-host/</guid><description>root@raspberrypi:/var/www# cat /etc/nginx/sites-enabled/www
server {
listen 80;
server_name home.control;
root /var/www;
index index.php index.html index.htm;
location / {
try_files $uri $uri/ =404;
autoindex on;
}
location ~ \.php$ {
try_files $uri =404;
fastcgi_split_path_info ^(.+\.php)(/.+)$;
fastcgi_pass unix:/var/run/php5-fpm.sock;
fastcgi_index index.php;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
include fastcgi_params;
}
location /git {
gzip off;
alias /usr/local/cgit/share;
try_files $uri @cgit;
}
location @cgit {
fastcgi_pass unix:/tmp/cgi.sock;
fastcgi_param QUERY_STRING $query_string;
fastcgi_param REQUEST_METHOD $request_method;
fastcgi_param CONTENT_TYPE $content_type;
fastcgi_param CONTENT_LENGTH $content_length;
fastcgi_param REQUEST_URI $request_uri;
fastcgi_param DOCUMENT_URI $document_uri;
fastcgi_param SERVER_PROTOCOL $server_protocol;
fastcgi_param GATEWAY_INTERFACE CGI/1.</description></item><item><title>Tiny IRC Doc</title><link>https://skorotkiewicz.github.io/techlog/tiny-irc-doc/</link><pubDate>Tue, 10 Jan 2017 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/tiny-irc-doc/</guid><description>.post-content ul {list-style: none;}
NickServ Register nickname on server:
/nick YourNick
/msg NickServ REGISTER YourPassword youremail@example.com
Login
/msg NickServ IDENTIFY YourNick YourPassword
Logging In
/connect chat.freenode.net 6697 YourNick:YourPassword
ChanServ Register your channel:
/msg ChanServ register #channel
Enable the GUARD (ChanServ) flag for your channel using:
/msg ChanServ set #channel guard on
Set ops:
/msg ChanServ flags #channel yournick +o</description></item><item><title>Run programs in the screen at startup using systemd</title><link>https://skorotkiewicz.github.io/techlog/run-programs-in-the-screen-at-startup-using-systemd/</link><pubDate>Mon, 05 Dec 2016 18:40:24 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/run-programs-in-the-screen-at-startup-using-systemd/</guid><description>systemd is very simple and easy to use, here you can see how to run the program in a screen with the specified user
create new file
nano /etc/systemd/system/radio.service and put it into a new file
[Unit] Description=Radio DJ After=network.target [Service] Type=oneshot ExecStart=/usr/bin/screen -dmS screennameradio /etc/liquidsoap/radio-pro.liq ExecStop=/usr/bin/screen -S screennameradio -X quit RemainAfterExit=yes User=radiodj [Install] WantedBy=multi-user.target and, of course
systemctl enable radio systemctl start radio</description></item><item><title>Nginx configuration for SSH tunnel</title><link>https://skorotkiewicz.github.io/techlog/nginx-configuration-for-ssh-tunnel/</link><pubDate>Sun, 09 Oct 2016 21:06:32 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/nginx-configuration-for-ssh-tunnel/</guid><description>upstream tunnel {
server 127.0.0.1:3000;
}
server {
listen 80;
server_name dev.server.tld www.dev.server.tld;
#optional
location / {
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $http_host;
proxy_redirect off;
proxy_pass http://tunnel;
}
}
ssh -vnNT -R 3000:localhost:80 root@server.tld</description></item><item><title>ffmpeg on Raspbian - Raspberry Pi</title><link>https://skorotkiewicz.github.io/techlog/ffmpeg-on-raspbian-raspberry-pi/</link><pubDate>Fri, 30 Sep 2016 16:44:33 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/ffmpeg-on-raspbian-raspberry-pi/</guid><description>First for all we need to build and install x264
git clone --depth 1 git://git.videolan.org/x264 cd x264 ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl make -j 4 sudo make install For mp3 support
wget http://downloads.sourceforge.net/project/lame/lame/3.99/lame-3.99.tar.gz tar xzvf lame-3.99.tar.gz cd lame-3.99 ./configure make make install For Hardware Encoding
add --enable-omx --enable-omx-rpi to ./configure options compile use encoder option -c:v h264_omx Then build and make ffmpeg
git clone --depth=1 git://source.ffmpeg.org/ffmpeg.git cd ffmpeg ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-libmp3lame --enable-nonfree --enable-omx --enable-omx-rpi make -j4 sudo make install ldconfig It takes just 25 minutes on a Raspberry Pi 3.</description></item><item><title>Gateway VPN - Raspberry Pi Router</title><link>https://skorotkiewicz.github.io/techlog/gateway-vpn-raspberry-pi-router/</link><pubDate>Mon, 26 Sep 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/gateway-vpn-raspberry-pi-router/</guid><description># nano /etc/sysctl.conf
# net.ipv4.ip_forward=1
# sysctl -p
# iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
# iptables -t nat -A POSTROUTING -o tap0 -j MASQUERADE
Enable VPN at boot # systemctl enable openvpn@Japan
nano /etc/default/openvpn
#AUTOSTART=&amp;quot;Japan&amp;quot;
##################################################
cron: @reboot sh /etc/openvpn/startRouting.sh
cat /etc/openvpn/startRouting.sh iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -t nat -A POSTROUTING -o tap0 -j MASQUERADE
cron: 0 0 * * * vnstati -i eth0 -o /var/www/bandwidth/current_s.</description></item><item><title>Fixing Lastpass &amp; Firefox</title><link>https://skorotkiewicz.github.io/techlog/fixing-lastpass-firefox/</link><pubDate>Sat, 12 Mar 2016 10:59:46 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/fixing-lastpass-firefox/</guid><description>If you are having problems with your browser locking up whenever you’re entering a password perform the following change.
Click the LastPass icon in your browser, and select preferences.
Then click on Notifications in the left hand menu.
Finally un-select the &amp;ldquo;Click Icons in Fields&amp;rdquo; option.
The interactive bits in the fields seems to be the core cause of the browser slow down / hangs.</description></item><item><title>'Music' from /dev/urandom</title><link>https://skorotkiewicz.github.io/techlog/music-from-/dev/urandom/</link><pubDate>Sun, 10 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/music-from-/dev/urandom/</guid><description>cat /dev/urandom | hexdump -v -e &amp;#39;/1 &amp;#34;%u\n&amp;#34;&amp;#39; | awk &amp;#39;{ split(&amp;#34;0,2,4,5,7,9,11,12&amp;#34;,a,&amp;#34;,&amp;#34;); for (i = 0; i &amp;lt; 1; i+= 0.0001) printf(&amp;#34;%08X\n&amp;#34;, 100*sin(1382*exp((a[$1 % 8]/12)*log(2))*i)) }&amp;#39; | xxd -r -p | aplay -c 2 -f S32_LE -r 16000</description></item><item><title>Convert directory to QEMU/KVM virtual disk image</title><link>https://skorotkiewicz.github.io/techlog/convert-directory-to-qemu/kvm-virtual-disk-image/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/convert-directory-to-qemu/kvm-virtual-disk-image/</guid><description>First, create a raw image of the required size. I&amp;rsquo;ll assume 10G is enough. Using seek creates a sparse file, which saves space.
dd if=/dev/null of=example.img bs=1M seek=10240
Next, create a filesystem on it.
mkfs.ext4 -F example.img
(Note that you need the -F option for mkfs.ext4 to operate on a file as opposed to a disk partition)
Then, mount it.
mkdir /mnt/example
mount -t ext4 -o loop example.img /mnt/example
Now you can copy your files to /mnt/example.</description></item><item><title>debootstrap debian chroot</title><link>https://skorotkiewicz.github.io/techlog/debootstrap-debian-chroot/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/debootstrap-debian-chroot/</guid><description># debootstrap --arch i386 squeeze /mnt http://ftp.halifax.rwth-aachen.de/debian
# chroot /mnt
# apt-get install linux-image-686
# apt-get install grub2
(answer to Continue without installing GRUB? with Yes)
# passwd root
(put any password you want. If you miss this step, you are not logging into your new system ;)
# exit
# mount -o bind /dev/ /mnt/pendrive/dev/
# mount -o bind /proc/ /mnt/pendrive/proc/
# mount -o bind /sys/ /mnt/pendrive/sys/
# chroot /mnt
# grub-install /dev/sdc
Installation finished.</description></item><item><title>Firefox Language</title><link>https://skorotkiewicz.github.io/techlog/firefox-language/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/firefox-language/</guid><description> install your language file from here about:config -&amp;gt; 'general.useragent.locale': 'de' restart Firefox http://ftp.mozilla.org/pub/firefox/nightly/latest-mozilla-central-l10n/linux-x86_64/xpi/
http://ftp.mozilla.org/pub/firefox/nightly/latest-mozilla-central-l10n</description></item><item><title>How to configure iptables for openvpn</title><link>https://skorotkiewicz.github.io/techlog/how-to-configure-iptables-for-openvpn/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/how-to-configure-iptables-for-openvpn/</guid><description>If you have installed the openvpn server and iptable is blocking the service by default then use these configurations for openvpn to function properly. First let&amp;rsquo;s allow the tcp connection on the openvpn port. If you are using udp or another port number then change this line accordingly.
iptables -A INPUT -i eth0 -m state --state NEW -p udp --dport 1194 -j ACCEPT
Allow TUN interface connections to OpenVPN server</description></item><item><title>PHP bot to get wikipedia definitions</title><link>https://skorotkiewicz.github.io/techlog/php-bot-to-get-wikipedia-definitions/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/php-bot-to-get-wikipedia-definitions/</guid><description>&amp;lt;?php function wikidefinition($s) { $url = &amp;#34;http://it.wikipedia.org/w/api.php?action=opensearch&amp;amp;search=&amp;#34;.urlencode($s).&amp;#34;&amp;amp;format=xml&amp;amp;limit=1&amp;#34;; $ch = curl_init($url); curl_setopt($ch, CURLOPT_HTTPGET, TRUE); curl_setopt($ch, CURLOPT_POST, FALSE); curl_setopt($ch, CURLOPT_HEADER, false); curl_setopt($ch, CURLOPT_NOBODY, FALSE); curl_setopt($ch, CURLOPT_VERBOSE, FALSE); curl_setopt($ch, CURLOPT_REFERER, &amp;#34;&amp;#34;); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE); curl_setopt($ch, CURLOPT_MAXREDIRS, 4); curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); curl_setopt($ch, CURLOPT_USERAGENT, &amp;#34;Mozilla/5.0 (Windows; U; Windows NT 6.1; he; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8&amp;#34;); $page = curl_exec($ch); $xml = simplexml_load_string($page); if((string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Description) { return array((string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Text, (string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Description, (string)$xml-&amp;gt;Section-&amp;gt;Item-&amp;gt;Url); } else { return &amp;#34;&amp;#34;; } }</description></item><item><title>Saving Iptables Firewall Rules Permanent</title><link>https://skorotkiewicz.github.io/techlog/saving-iptables-firewall-rules-permanent/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/saving-iptables-firewall-rules-permanent/</guid><description>run as root
sudo -s
Save current firewall rules to file
iptables-save &amp;gt; /etc/firewall.conf
INCLUDE ON BOOT
echo '#!/bin/sh' &amp;gt; /etc/network/if-up.d/iptables
echo &amp;quot;iptables-restore &amp;lt; /etc/firewall.conf&amp;quot; &amp;gt;&amp;gt; /etc/network/if-up.d/iptables
chmod +x /etc/network/if-up.d/iptables
SAVE ON SHUTDOWN/REBOOT
echo '#!/bin/sh' &amp;gt; /etc/network/if-down.d/iptables
echo &amp;quot;iptables-save &amp;gt; /etc/firewall.conf&amp;quot; &amp;gt;&amp;gt; /etc/network/if-down.d/iptables
chmod +x /etc/network/if-down.d/iptables
is working for me
if you what to save your iptables rules after an change to iptables just run below.. but it will run the same command on reboot or shutdown.</description></item><item><title>Simple server backup</title><link>https://skorotkiewicz.github.io/techlog/simple-server-backup/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/simple-server-backup/</guid><description>sudo mount /dev/xxxx -o remount-ro /mnt
mkdir /backup; cd /backup
tar --exclude='./backup' --exclude='./mnt/backup' -cvjpf mybackup.tar.bz2 /mnt
Then you unpack with behavior permission
sudo tar -xvjpf mybackup.tar.bz2
Creating A Backup All Datebases And Restore mysqldump -u root -p --all-databases &amp;gt; all_databases.sql
mysqldump -u root -p --all-databases &amp;lt; all_databases.sql
Creating A Backup Single Datebase And Restore mysqldump -u root -p db_name &amp;gt; db_file.sql
mysqldump -u root -p db_name &amp;lt; db_file.sql
Split larger files into smaller parts?</description></item><item><title>ssh tunnel to localhost</title><link>https://skorotkiewicz.github.io/techlog/ssh-tunnel-to-localhost/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/ssh-tunnel-to-localhost/</guid><description>ssh -R 9000:192.168.1.13:80 -N root@example.com</description></item><item><title>Weechat BNC</title><link>https://skorotkiewicz.github.io/techlog/weechat-bnc/</link><pubDate>Fri, 01 Jan 2016 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/weechat-bnc/</guid><description>openssl s_client -connect znc.itunix.cloud:6697 &amp;lt;/dev/null 2&amp;gt;/dev/null | openssl x509 -in /dev/stdin -noout -fingerprint -sha256 | sed s/://g | cut -c 20-
5A038025E789ED2F1032EB15XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX08FA693
/server add BNC znc.itunix.cloud/6697 -ssl -username=l__q/freenode -password=XXXXXXXXXXXX -autoconnect
/set irc.server.BNC.ssl_fingerprint 5A038025E789ED2F1032EB15XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX08FA693
/connect BNC
/save</description></item><item><title>Applications that I use on iPhone</title><link>https://skorotkiewicz.github.io/techlog/applications-that-i-use-on-iphone/</link><pubDate>Sun, 13 Dec 2015 11:47:35 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/applications-that-i-use-on-iphone/</guid><description>I have prepared a list of applications that I use on my iPhone; the following list does not include all applications I’m using, but only those which can seem to be interesting for some of you.
.appBoxs { border-bottom: 1px solid #ccc; margin-top: 10px; padding-bottom: 10px; } Firefox
Very long-awaited iPhone app is Firefox, which is mostly valuable for its quick and easy synchronizing of browsing history, so I can continue my work on smartphone.</description></item><item><title>Facebook on Tor</title><link>https://skorotkiewicz.github.io/techlog/facebook-on-tor/</link><pubDate>Sun, 05 Apr 2015 12:05:20 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/facebook-on-tor/</guid><description> Zuckerberg jealous that I have a blog with my name in the domain, decided to open his factory in onions.
Facebook available at: https://facebookcorewwwi.onion/</description></item><item><title>Compile and run OpenCV code from the command line</title><link>https://skorotkiewicz.github.io/techlog/compile-and-run-opencv-code-from-the-command-line/</link><pubDate>Thu, 01 Jan 2015 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/compile-and-run-opencv-code-from-the-command-line/</guid><description>For OpenCV 2.4.x cd /path/to/opencv/samples/c/
For OpenCV 3 cd /path/to/opencv/samples/cpp/
Compile g++ -ggdb `pkg-config --cflags --libs opencv` facedetect.cpp -o facedetect
run ./facedetect</description></item><item><title>StopForumSpam.com -> iptables</title><link>https://skorotkiewicz.github.io/techlog/stopforumspam.com-iptables/</link><pubDate>Thu, 01 Jan 2015 18:10:58 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/stopforumspam.com-iptables/</guid><description>Start with the dependencies: apt-get install zip unzip ipset
Then add this to your existing iptables firewall script: ipset create sfs_block hash:net
iptables -I FORWARD -p tcp --dport 80:443 -m set --match-set sfs_block src -j DROP
Then a script that updates the ipset: ipset destroy tempset
ipset create tempset hash:net
cd /tmp
wget -N http://www.stopforumspam.com/downloads/listed_ip_7.zip
unzip listed_ip_7.zip
sed 's:^:add tempset :' listed_ip_7.txt &amp;gt; listed_ip_7_importfile.txt
ipset restore &amp;lt; listed_ip_7_importfile.txt
rm listed_ip_7_importfile.txt
ipset swap tempset sfs_block</description></item><item><title>How to change the description of the Stream in Liquidsoap</title><link>https://skorotkiewicz.github.io/techlog/how-to-change-the-description-of-the-stream-in-liquidsoap/</link><pubDate>Sun, 22 Jun 2014 09:27:44 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/how-to-change-the-description-of-the-stream-in-liquidsoap/</guid><description>output.icecast( %mp3(bitrate=96), mount=&amp;quot;/radio-96.mp3&amp;quot;, genre=&amp;quot;electronic&amp;quot;, description=&amp;quot;ITUnix Radio Electronic Music&amp;quot;, name=&amp;quot;ITUnix Radio&amp;quot;, url=&amp;quot;http://radio.itunix.eu&amp;quot;, host=&amp;quot;localhost&amp;quot;, port=8147, password=&amp;quot;PASSWORD&amp;quot;, radio) example 2
output.icecast( %mp3(stereo=false, bitrate=16, samplerate=22050), host=&amp;quot;audio3.radioreference.com&amp;quot;, port = 80, password = &amp;quot;xxxxxxxxx&amp;quot;, genre=&amp;quot;Scanner&amp;quot;, description=&amp;quot;Scanner audio&amp;quot;, mount=&amp;quot;/xxxxxxxx&amp;quot;, name=&amp;quot;Baltimore Maryland Police/Fire/EMS&amp;quot;, user=&amp;quot;source&amp;quot;, url=&amp;quot;http://www.scanbaltimore.com&amp;quot;, radio)</description></item><item><title>Rsync backup remote server to local</title><link>https://skorotkiewicz.github.io/techlog/rsync-backup-remote-server-to-local/</link><pubDate>Fri, 16 May 2014 17:58:16 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/rsync-backup-remote-server-to-local/</guid><description>What can I say, a simple way to backup remote server on the local machine
rsync -aHxv root@remote.example.com:/* /local/backup/server/ \ --exclude=/dev \ --exclude=/proc \ --exclude=/sys \ --exclude=/tmp</description></item><item><title>Setting up Nagios Server to Remotely Server on Debian</title><link>https://skorotkiewicz.github.io/techlog/setting-up-nagios-server-to-remotely-server-on-debian/</link><pubDate>Sun, 20 Apr 2014 23:03:59 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/setting-up-nagios-server-to-remotely-server-on-debian/</guid><description>Step 1. Installing packages
We have one server for monitoring (eg. myoneserver). [client]
# aptitude install nagios-nrpe-server nagios-plugins And one server to view statistics. [server]
# aptitude install nagios-nrpe-plugin nagios-plugins nagios3 Step 2. Configuring the server for monitoring [client]
Edit /etc/nagios/nrpe.conf.
# nano /etc/nagios/nrpe.conf Set the server_address to the IP address you want NRPE to bind to on the Untangle server. If you want it to bind to all addresses, leave this command commented out.</description></item><item><title>Find and replace text in multiple files using geany</title><link>https://skorotkiewicz.github.io/techlog/find-and-replace-text-in-multiple-files-using-geany/</link><pubDate>Tue, 31 Dec 2013 21:26:59 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/find-and-replace-text-in-multiple-files-using-geany/</guid><description>To open all files, in which a specific string is found, from inside of a directory (and subdirectories) open Geany, select Terminal tab from Message Window and run next command inside:
grep -rHIF --exclude='/home/modinfo/bitcoin/*~' -- 'text_to_find' /bin/bash /home/modinfo/bitcoin/* | geany `awk 'BEGIN {FS=&amp;quot;[:]&amp;quot;} {print $1}'` source</description></item><item><title>Quick server backup</title><link>https://skorotkiewicz.github.io/techlog/quick-server-backup/</link><pubDate>Sun, 29 Dec 2013 02:30:09 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/quick-server-backup/</guid><description>mount /dev/xxxx -o remount-ro /mnt tar -cvjpf serverbackup.tar.bz2 /mnt then unpack the behavior of permissions
tar -xvjpf serverbackup.tar.bz2 here my script with mysql backup. backup.sh
# create backup catalog mkdir /backup # clean aptitude clean rm /var/log/*.gz rm /var/log/apache2/*.gz rm /var/log/apt/*.gz rm /var/log/clamav/*.gz rm /var/backups/*.gz # start archive tar -cvjpf /backup/backup_bin.tar.bz2 /bin tar -cvjpf /backup/backup_home.tar.bz2 /home tar -cvjpf /backup/backup_lib.tar.bz2 /lib tar -cvjpf /backup/backup_root.tar.bz2 /root tar -cvjpf /backup/backup_usr.tar.bz2 /usr tar -cvjpf /backup/backup_etc.</description></item><item><title>FIX: make: Nothing to be done for `first`.</title><link>https://skorotkiewicz.github.io/techlog/fix-make-nothing-to-be-done-for-first./</link><pubDate>Sat, 21 Dec 2013 17:05:28 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/fix-make-nothing-to-be-done-for-first./</guid><description>following error:
make: Nothing to be done for `first`.
Solution:
qmake -project &amp;amp;&amp;amp; qmake hello.pro &amp;amp;&amp;amp; make</description></item><item><title>Liquidsoap: AutoDJ for icecast</title><link>https://skorotkiewicz.github.io/techlog/liquidsoap-autodj-for-icecast/</link><pubDate>Fri, 01 Nov 2013 15:03:30 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/liquidsoap-autodj-for-icecast/</guid><description>Wonder it’s called “Liquidsoap”. Is a piece of firmware that can really do a lot of things. What does it do? Starting play playlists, depending on the time or any logic, he can listen to Icecast or Shoutcast instead, is able to download the streams from other servers, mix them, detect or work, etc…
Configuration looks like this:
#!/usr/bin/liquidsoap
set(&amp;quot;log.file.path&amp;quot;,&amp;quot;/tmp/basic-radio.log&amp;quot;)
# required speech synthesizer, aptitude install festival
message = &amp;quot;That's it!</description></item><item><title>Own IRC Server on Debian with Anope and MySQL</title><link>https://skorotkiewicz.github.io/techlog/own-irc-server-on-debian-with-anope-and-mysql/</link><pubDate>Tue, 21 May 2013 12:54:51 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/own-irc-server-on-debian-with-anope-and-mysql/</guid><description>** Pre-Installation **
First, download the UnrealIRCd source, located here
wget http://www.unrealircd.com/downloads/Unreal3.2.10.1.tar.gz wget http://www.unrealircd.com/pgp/Unreal3.2.10.1.tar.gz.asc After you install it, run a few checks on the gzip file to make sure it is the secured version.
gpg --keyserver keys.gnupg.net --recv-keys 0x9FF03937 gpg --verify Unreal3.2.10.1.tar.gz.asc Unreal3.2.10.1.tar.gz Next, we have to extract the contents of the compressed file. Type
tar zxvf Unreal3.2.10.1.tar.gz ** SSL Support
If you want users to be able to connect to your IRC server via a secure connection, you will need to install a package called libcurl4-openssl-dev.</description></item><item><title>Nginx proxy_pass</title><link>https://skorotkiewicz.github.io/techlog/nginx-proxy_pass/</link><pubDate>Thu, 09 May 2013 09:48:18 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/nginx-proxy_pass/</guid><description>From synchtube.itunix.eu:1337 to synchtube.itunix.eu
server { # listen 66.225.195.83; server_name synchtube.itunix.eu; access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; location / { proxy_pass http://synchtube.itunix.eu:1337; proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; proxy_redirect off; proxy_buffering off; proxy_set_header Host static.example.com; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } }</description></item><item><title>FIX ping: command not found</title><link>https://skorotkiewicz.github.io/techlog/fix-ping-command-not-found/</link><pubDate>Thu, 09 May 2013 09:39:35 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/fix-ping-command-not-found/</guid><description>root@nsa310:~# ping -bash: ping: command not found here is simple solution
# aptitude install inetutils-tools inetutils-ping test it
root@nsa310:~# ping 127.0.0.1 PING 127.0.0.1 (127.0.0.1): 56 data bytes 64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.128 ms 64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.091 ms ^C--- 127.0.0.1 ping statistics --- 2 packets transmitted, 2 packets received, 0% packet loss round-trip min/avg/max/stddev = 0.091/0.110/0.128/0.000 ms</description></item><item><title>SSH Tunel to your Proxy Webbrowser</title><link>https://skorotkiewicz.github.io/techlog/ssh-tunel-to-your-proxy-webbrowser/</link><pubDate>Sat, 30 Mar 2013 23:41:54 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/ssh-tunel-to-your-proxy-webbrowser/</guid><description>$ ssh -4 -N -D 1025 root@server.com 1025 is a proxy port (localhost:1025)</description></item><item><title>Notification of the new linux kernel on your Android in PHP</title><link>https://skorotkiewicz.github.io/techlog/notification-of-the-new-linux-kernel-on-your-android-in-php/</link><pubDate>Sat, 02 Feb 2013 13:06:24 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/notification-of-the-new-linux-kernel-on-your-android-in-php/</guid><description>how to use? very simple!
$ crontab -e add line
* 7 * * * php /home/mod/notification.php&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 and save
now script will be run from cron every day at 7:00 am and notify you of a new kernel!</description></item><item><title>Screenshot with date and Countdown</title><link>https://skorotkiewicz.github.io/techlog/screenshot-with-date-and-countdown/</link><pubDate>Mon, 24 Dec 2012 00:31:33 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/screenshot-with-date-and-countdown/</guid><description>Install: save code to /usr/bin/screenshot
Usage: screenshot 5
five us for 5sec countdown
#!/bin/sh if [ $1 ] then scrot -cd $1 &amp;quot;%Y-%m-%d_`echo $(date +%H-%m-%S)`.png&amp;quot; -e 'mv $f /home/modinfo/shots/' echo &amp;quot;Screenshot save in: /home/modinfo/shots/`echo $(date +%Y-%m-%d_%H-%m-%S)`.png&amp;quot; else scrot &amp;quot;%Y-%m-%d_`echo $(date +%H-%m-%S)`.png&amp;quot; -e 'mv $f /home/modinfo/shots/' echo &amp;quot;Screenshot save in: /home/modinfo/shots/`echo $(date +%Y-%m-%d_%H-%m-%S)`.png&amp;quot; fi</description></item><item><title>Create md5 from string im Linux</title><link>https://skorotkiewicz.github.io/techlog/create-md5-from-string-im-linux/</link><pubDate>Sat, 15 Dec 2012 10:42:47 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/create-md5-from-string-im-linux/</guid><description>How to install?
Create new file
nano /usr/bin/md5 copy&amp;amp;paste code to /usr/bin/md5
chmod:
chmod +x /usr/bin/md5 Code:
#!/bin/sh if [ $1 ] then hash=&amp;quot;$(echo -n &amp;quot;$1&amp;quot; | md5sum )&amp;quot; echo &amp;quot;$hash&amp;quot; else echo &amp;quot;Example usage: md5 &amp;lt;you-string&amp;gt;&amp;quot; fi Usage and Output:
root@host:~# md5 sebastian c2d628ba98ed491776c9335e988e2e3b &amp;amp;#8211;</description></item><item><title>List crontab for all users</title><link>https://skorotkiewicz.github.io/techlog/list-crontab-for-all-users/</link><pubDate>Fri, 30 Nov 2012 22:03:27 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/list-crontab-for-all-users/</guid><description>for user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done for user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done</description></item><item><title>Own IRC Server on Debian</title><link>https://skorotkiewicz.github.io/techlog/own-irc-server-on-debian/</link><pubDate>Fri, 30 Nov 2012 20:20:50 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/own-irc-server-on-debian/</guid><description> aptitude install ircd-irc2 nano /etc/ircd/ircd.conf M:irc.&amp;lt;HOSTNAME&amp;gt;::&amp;lt;COUNTRY&amp;gt;::000A A:&amp;lt;NAME&amp;gt;:&amp;lt;EMAIL&amp;gt;::&amp;lt;COMPANYNAME&amp;gt;: Y:1:90::100:512000:5.5:100.100 Y:2:90::300:512000:5.5:250.250 I:*:::0:1 I:127.0.0.1/32:::0:1 I:192.168.0.0/24::::0:2 P::::6667: nano /etc/ircd/ircd.motd Your welcome text /etc/init.d/ircd restart</description></item><item><title>if echo</title><link>https://skorotkiewicz.github.io/techlog/if-echo/</link><pubDate>Fri, 02 Nov 2012 17:02:48 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/if-echo/</guid><description>$value = &amp;#39;aaa&amp;#39;; echo $value==&amp;#39;aaa&amp;#39; ? &amp;#39;yes&amp;#39; : &amp;#39;no&amp;#39;; example 1
echo &amp;#34;always say this &amp;#34; . ( ($test == &amp;#34;true&amp;#34;) ? &amp;#34;Say this if that is true&amp;#34; : &amp;#34;&amp;#34;) . &amp;#34; Always say this at the end.&amp;#34;; example 2
echo &amp;#39;&amp;lt;option value=&amp;#34;&amp;#39;.$value.&amp;#39;&amp;#34;&amp;#39;.($value==&amp;#39;United States&amp;#39; ? &amp;#39;selected=&amp;#34;selected&amp;#34;&amp;#39; : &amp;#39;&amp;#39;).&amp;#39;&amp;gt;&amp;#39;.$value.&amp;#39;&amp;lt;/option&amp;gt;&amp;#39;;</description></item><item><title>Autostart in Linux - made easy</title><link>https://skorotkiewicz.github.io/techlog/autostart-in-linux-made-easy/</link><pubDate>Wed, 31 Oct 2012 10:42:48 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/autostart-in-linux-made-easy/</guid><description>add or remove programs from startup without effort, thanks rcconf!
root@example:~# aptitude install rcconf root@example:~# rcconf</description></item><item><title>iptables simple ban ip rules</title><link>https://skorotkiewicz.github.io/techlog/iptables-simple-ban-ip-rules/</link><pubDate>Thu, 18 Oct 2012 07:14:03 +0200</pubDate><guid>https://skorotkiewicz.github.io/techlog/iptables-simple-ban-ip-rules/</guid><description>Ban an IP address (IP address cannot be entered on the server)
# iptables -A INPUT -s 1.2.3.4 -j DROP Ban an IP address (cannot be accessed from the server on the IP)
# iptables -A OUTPUT -s 1.2.3.4 -j DROP Delete Rule by Chain and Number
# iptables -L --line-numbers # iptables -D INPUT 3 Flush a Single Chain
Delete all of the rules in the INPUT chain, run this command</description></item><item><title>Convert ogg to mp3 and mp3 to ogg</title><link>https://skorotkiewicz.github.io/techlog/convert-ogg-to-mp3-and-mp3-to-ogg/</link><pubDate>Tue, 02 Oct 2012 23:53:17 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/convert-ogg-to-mp3-and-mp3-to-ogg/</guid><description>install sox and mp32ogg from you repository
convert ogg to mp3
sox file.ogg file.mp3 convert mp3 to ogg
mp32ogg musicsong.mp3</description></item><item><title>Generate a checksum of the files in a directory</title><link>https://skorotkiewicz.github.io/techlog/generate-a-checksum-of-the-files-in-a-directory/</link><pubDate>Tue, 02 Oct 2012 23:05:34 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/generate-a-checksum-of-the-files-in-a-directory/</guid><description>find . -type f -print0 | xargs -0 md5sum &amp;gt;&amp;gt; checksum.md5</description></item><item><title>Change photos to pencil sketch in CLI</title><link>https://skorotkiewicz.github.io/techlog/change-photos-to-pencil-sketch-in-cli/</link><pubDate>Tue, 02 Oct 2012 22:00:22 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/change-photos-to-pencil-sketch-in-cli/</guid><description>convert input.jpg -colorspace gray \( +clone -blur 0x2 \) +swap -compose divide-composite -linear-stretch 5%x0% output.jpg</description></item><item><title>Play music on a remote computer via SSH</title><link>https://skorotkiewicz.github.io/techlog/play-music-on-a-remote-computer-via-ssh/</link><pubDate>Tue, 02 Oct 2012 13:47:47 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/play-music-on-a-remote-computer-via-ssh/</guid><description>On the &amp;ldquo;music server&amp;rdquo;
sudo apt-get install openssh-server mplayer On the your computer
ssh &amp;lt;username&amp;gt;@&amp;lt;serverip&amp;gt; cd /path/to/music/files If you want to play only one song
mplayer song.mp3 If you want to play the whole directory
mplayer *.mp3 In case of multiple extentions (example with mp3, wma and ogg files
mplayer *.mp3 *.wma *.ogg</description></item><item><title>Quick crontab man</title><link>https://skorotkiewicz.github.io/techlog/quick-crontab-man/</link><pubDate>Tue, 02 Oct 2012 12:58:37 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/quick-crontab-man/</guid><description>#minute (0-59), #| hour (0-23), #| | day of the month (1-31), #| | | month of the year (1-12), #| | | | day of the week (0-6 with 0=Sunday). #| | | | | commands */5 2 * * 0,4 sh /home/mod/script.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1`</description></item><item><title>Disable ping reply on GNU/Linux</title><link>https://skorotkiewicz.github.io/techlog/disable-ping-reply-on-gnu/linux/</link><pubDate>Tue, 02 Oct 2012 12:37:56 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/disable-ping-reply-on-gnu/linux/</guid><description>Disable ping reply temporarily
echo &amp;quot;1&amp;quot; &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_all Enable the ping reply back
echo &amp;quot;1&amp;quot; &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</description></item><item><title>Generating passwords in cli</title><link>https://skorotkiewicz.github.io/techlog/generating-passwords-in-cli/</link><pubDate>Tue, 02 Oct 2012 12:29:20 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/generating-passwords-in-cli/</guid><description>-c = length of the password
&amp;lt; /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c10 generating random txt
&amp;lt; /dev/urandom tr -dc [:print:] | head -c10000 &amp;gt; lol.txt</description></item><item><title>Swap file creation</title><link>https://skorotkiewicz.github.io/techlog/swap-file-creation/</link><pubDate>Tue, 02 Oct 2012 12:18:12 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/swap-file-creation/</guid><description>A simple way to add extra memory to your machine .
Create an exchange file:
dd if=/dev/zero of=/swapfile bs=1M count=1024 _The above will create 1GB file (1M _ 1024)*
Improving access rights:
chmod 600 /swapfile Initialize it as a swap
mkswap /swapfile Activate /swapfile swap space immediately:
swapon /swapfile Make sure that it works:
free -m To activate /swapfile after Linux system reboot, add entry to /etc/fstab file.
vim /etc/fstab Add permanently to /etc/fstab:</description></item><item><title>Change all string on new im VIM</title><link>https://skorotkiewicz.github.io/techlog/change-all-string-on-new-im-vim/</link><pubDate>Tue, 02 Oct 2012 12:04:36 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/change-all-string-on-new-im-vim/</guid><description>:%s/OLDTEXT/NEWTEXT Example
:%s/192.168.0.101/192.168.0.110</description></item><item><title>Create GIF animation in CLI from images</title><link>https://skorotkiewicz.github.io/techlog/create-gif-animation-in-cli-from-images/</link><pubDate>Tue, 02 Oct 2012 11:53:05 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/create-gif-animation-in-cli-from-images/</guid><description>convert -delay 200 -quality 20 -size 200 -loop 0 &amp;lt;images&amp;gt; &amp;lt;gifImage.gif&amp;gt;
Example
convert -delay 200 -quality 20 -size 200 -loop 0 /home/images/*.png ~/gifImage.gif</description></item><item><title>scp - copy files over ssh in linux</title><link>https://skorotkiewicz.github.io/techlog/scp-copy-files-over-ssh-in-linux/</link><pubDate>Tue, 02 Oct 2012 11:45:26 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/scp-copy-files-over-ssh-in-linux/</guid><description>scp filename.zip user@server:path Example
cd /home/dates/ scp data.zip root@192.168.0.100:/var/www/</description></item><item><title>nmap - scan an ip range for a single open port</title><link>https://skorotkiewicz.github.io/techlog/nmap-scan-an-ip-range-for-a-single-open-port/</link><pubDate>Tue, 02 Oct 2012 11:35:55 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/nmap-scan-an-ip-range-for-a-single-open-port/</guid><description>nmap -p80 192.168.0.0/24 -oG - | grep 80/open Example
[modinfo@arch-pc ~]$ nmap -p80 192.168.0.0/24 -oG - | grep 80/open
Host: 192.168.0.1 (router) Ports: 80/open/tcp//http///
Host: 192.168.0.100 (aaa) Ports: 80/open/tcp//http///
Host: 192.168.0.126 (nsa310) Ports: 80/open/tcp//http///
Host: 192.168.0.133 (arch-pc) Ports: 80/open/tcp//http///</description></item><item><title>Linux tar Command - Creating tar file via CLI</title><link>https://skorotkiewicz.github.io/techlog/linux-tar-command-creating-tar-file-via-cli/</link><pubDate>Mon, 01 Oct 2012 11:24:23 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/linux-tar-command-creating-tar-file-via-cli/</guid><description>Creating a tar archive tar -cvf archiveName.tar directoryToPack/ or
tar -cvf archiveName.tar /dir1 /dir2 file1 file2 or
tar -cvf archive.tar /dir/music /dir/photos /dir/text.txt Unpacking tar tar -zxvf archiveName.tar You can also unpack single files or directories using their list (divided by spaces) at the end of the command:
tar -xf archiveName.tar file1 file2 dir1 dir2 Packaging the same file formats tar cvzf allphps.tar *.php List the contents of a tar file List all files in allphps.</description></item><item><title>PHP Security - disabled the exec, etc.</title><link>https://skorotkiewicz.github.io/techlog/php-security-disabled-the-exec-etc./</link><pubDate>Sun, 30 Sep 2012 08:05:06 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/php-security-disabled-the-exec-etc./</guid><description>In /etc/php5/apache2/php.ini
as someone already can upload phpshell it will not do too much…
disable_functions = exec, shell_exec, system, popen, passthru, escapeshellarg, escapeshellcmd, proc_close, proc_open, ini_alter, dl, popen, show_source, set_time_limit, php_uname, phpinfo, diskfreespace, disk_total_space, disk_free_space, get_current_user, posix_uname  </description></item><item><title>Own XMPP/Jabber Server on Debian</title><link>https://skorotkiewicz.github.io/techlog/own-xmpp/jabber-server-on-debian/</link><pubDate>Sun, 30 Sep 2012 06:23:50 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/own-xmpp/jabber-server-on-debian/</guid><description>Installing ejab­berd: aptitude install ejabberd Configuration: nano /etc/ejabberd/ejabberd.cfg Find and change the line: {acl, admin, {user, &amp;quot;YOURNAME&amp;quot;, &amp;quot;YOURDOMAIN&amp;quot;}}. Append a little below your domain: {hosts, [&amp;quot;YOURDOMAIN&amp;quot;]}. Restart ejabberd: ejabberdctl restart Register an account for yourself: ejabberdctl register YOURNAME YOURDOMAIN YOURPASSWORD If the ejabberd is on a different server set SRV records: jid.YOURDOMAIN.TLD. A IPSERVEREJABBERD _xmpp-client._tcp.YOURDOMAIN.TLD. SRV 10 0 5222 jid.YOURDOMAIN.TLD. _xmpp-server._tcp.YOURDOMAIN.TLD. SRV 10 0 5269 jid.</description></item><item><title>Connection Limit Linux</title><link>https://skorotkiewicz.github.io/techlog/connection-limit-linux/</link><pubDate>Sun, 16 Sep 2012 10:06:30 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/connection-limit-linux/</guid><description>iptables -A INPUT -p tcp --syn --dport 80 -m connlimit --connlimit-above 10 -j REJECT --reject-with tcp-reset</description></item><item><title>Show all php Errors</title><link>https://skorotkiewicz.github.io/techlog/show-all-php-errors/</link><pubDate>Sun, 16 Sep 2012 09:59:53 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/show-all-php-errors/</guid><description>Show all php error in php file
error_reporting(E_ALL); ini_set(&amp;#39;display_errors&amp;#39;, &amp;#39;1&amp;#39;);</description></item><item><title>Linux commands to help me work</title><link>https://skorotkiewicz.github.io/techlog/linux-commands-to-help-me-work/</link><pubDate>Sun, 16 Sep 2012 09:57:49 +0000</pubDate><guid>https://skorotkiewicz.github.io/techlog/linux-commands-to-help-me-work/</guid><description>Search for files and directories given text
grep -i -n -r 'Search string' /var/www/path/ Shows how many times is the search text in the text and returns the result in numbers.
cat access.log|grep 'Search string' | wc -l Remove all .gz from /var/log/
find /var/log/ -name &amp;quot;*.gz&amp;quot; -type f -delete Find and replace text in all files in a directory
find ./ -type f -exec sed -i 's/string1/string2/g' {} \; find /var/log/ -type f -exec sed -i 's/string1/string2/g' {} \; Unpack tar files</description></item></channel></rss>