<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2020 on Sebastian Korotkiewicz - Tech{{log}}</title><link>https://sekor.eu.org/archive/2020/</link><description>Recent content in 2020 on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 28 Dec 2020 12:11:03 +0100</lastBuildDate><atom:link href="https://sekor.eu.org/archive/2020/index.xml" rel="self" type="application/rss+xml"/><item><title>Javascript</title><link>https://sekor.eu.org/note/javascript/</link><pubDate>Mon, 28 Dec 2020 12:11:03 +0100</pubDate><guid>https://sekor.eu.org/note/javascript/</guid><description>I&amp;rsquo;ve always programmed in PHP, but a year ago a school friend asked me to help him with a program written in javascript, I immediately wrote him a program in php, but he intrigued me with javascript and since then I started using javascript! Today thanks to my friend I am programming in React and NodeJS and I think JavaScript is the best programming language &amp;lt;3
Today I am at a fairly high level in React and NodeJS&amp;hellip;</description></item><item><title>Restore Wifi Password</title><link>https://sekor.eu.org/note/restore-wifi-password/</link><pubDate>Fri, 25 Dec 2020 09:21:04 +0100</pubDate><guid>https://sekor.eu.org/note/restore-wifi-password/</guid><description>STEP 1 - Get Handshake Check if your wireless card does support monitor mode.
If you do not see an interface listed then your wireless card does not support monitor mode.
airmon-ng Put your network device into monitor mode
# airmon-ng start wlan0 Listen for all nearby beacon frames to get target BSSID and channel
# airodump-ng wlan0mon Start listening for the handshake
# airodump-ng --channel 6 â€”-bssid 9C:5C:8E:C9:AB:C0 --write capture/ wlan0mon Optionally deauth a connected client to force a handshake</description></item><item><title>My Daily Blog</title><link>https://sekor.eu.org/daily/2020/12/15/my-daily-blog/</link><pubDate>Tue, 15 Dec 2020 06:50:39 +0100</pubDate><guid>https://sekor.eu.org/daily/2020/12/15/my-daily-blog/</guid><description>My plan for the new year 2021 is to blog daily! ^_^</description></item><item><title>Quickly install openjdk-8-jre-headless on Debian without apt-get</title><link>https://sekor.eu.org/techlog/quickly-install-openjdk-8-jre-headless-on-debian-without-apt-get/</link><pubDate>Tue, 10 Nov 2020 08:34:57 +0200</pubDate><guid>https://sekor.eu.org/techlog/quickly-install-openjdk-8-jre-headless-on-debian-without-apt-get/</guid><description>Manually installation
wget https://github.com/ojdkbuild/contrib_jdk8u-ci/releases/download/jdk8u212-b04/jdk-8u212-ojdkbuild-linux-x64.zip \ -O /tmp/jdk-8u212-ojdkbuild-linux-x64.zip unzip /tmp/jdk-8u212-ojdkbuild-linux-x64.zip /usr/lib/jvm/ rm /tmp/jdk-8u212-ojdkbuild-linux-x64.zip Add PATH to your .bashrc
export PATH=$PATH:/usr/lib/jvm/jdk-8u212-ojdkbuild-linux-x64/jre/bin Done</description></item><item><title>My GPG setup for developing and more</title><link>https://sekor.eu.org/techlog/my-gpg-setup-for-developing-and-more/</link><pubDate>Sun, 19 Jul 2020 00:14:17 +0200</pubDate><guid>https://sekor.eu.org/techlog/my-gpg-setup-for-developing-and-more/</guid><description>Generating a new GPG key If you don&amp;rsquo;t have your own GPG key yet, it&amp;rsquo;s time to generate one for yourself, you can find a great guide on the GitHub website.
Enter a valid email address!
$ gpg --full-generate-key Telling Git about your GPG key Git supports signing your commits with GPG, we already have our generated key, so we can add it to our Git client so that every new commit is signed with our key.</description></item><item><title>Create a Tor Website with Nginx and PHP</title><link>https://sekor.eu.org/techlog/create-a-tor-website-with-nginx-and-php/</link><pubDate>Sun, 23 Feb 2020 17:43:31 +0200</pubDate><guid>https://sekor.eu.org/techlog/create-a-tor-website-with-nginx-and-php/</guid><description>li { padding-bottom: 5px; } Step 1: Install Debian Prepare Debian to install https packages sudo apt install apt-transport-https Step 2: Install Nginx and PHP sudo apt install nginx php7.3-fpm sudo rm /etc/nginx/sites-enabled/default sudo nano /etc/nginx/sites-enabled/default Add the followings to the new /etc/nginx/sites-enabled/default and save: server { listen 127.0.0.1:8080 default_server; server_name localhost; root /var/www/tor/public; index index.php index.html index.htm; server_tokens off; location / { allow 127.0.0.1; deny all; try_files $uri $uri/ /index.</description></item></channel></rss>