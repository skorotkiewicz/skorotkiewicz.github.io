<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2018 on Sebastian Korotkiewicz - Tech{{log}}</title><link>http://localhost:1313/archive/2018/</link><description>Recent content in 2018 on Sebastian Korotkiewicz - Tech{{log}}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 16 Dec 2018 07:54:26 +0200</lastBuildDate><atom:link href="http://localhost:1313/archive/2018/index.xml" rel="self" type="application/rss+xml"/><item><title>"Bash Here" Context Menu in Windows Explorer</title><link>http://localhost:1313/techlog/bash-here-context-menu-in-windows-explorer/</link><pubDate>Sun, 16 Dec 2018 07:54:26 +0200</pubDate><guid>http://localhost:1313/techlog/bash-here-context-menu-in-windows-explorer/</guid><description>Here for bash
Windows Registry Editor Version 5.00
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu Bash Here]
@=&amp;quot;ConEmu Bash Here&amp;quot;
&amp;quot;Icon&amp;quot;=&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe,0&amp;quot;
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu Bash Here\command]
@=&amp;quot;\&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe\&amp;quot; -here -run {bash} -cur_console:n&amp;quot;
Here for cmd
Windows Registry Editor Version 5.00
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu CMD Here]
@=&amp;quot;ConEmu CMD Here&amp;quot;
&amp;quot;Icon&amp;quot;=&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe,0&amp;quot;
[HKEY_CLASSES_ROOT\Directory\Background\shell\ConEmu CMD Here\command]
@=&amp;quot;\&amp;quot;C:\\Users\\sebas\\Desktop\\Programy\\ConEmuPack\\ConEmu64.exe\&amp;quot; -here -run {cmd} -cur_console:n&amp;quot;
Remember to change the path to ConEmu installation and rename the username to your own</description></item><item><title>Compare `git add .` vs `git add -A`</title><link>http://localhost:1313/techlog/compare-git-add-.-vs-git-add-a/</link><pubDate>Wed, 12 Dec 2018 06:11:23 +0200</pubDate><guid>http://localhost:1313/techlog/compare-git-add-.-vs-git-add-a/</guid><description>Both of these will stage all files, including new files (which git commit -a misses) and deleted files.
The difference is that git add -A also stages files in higher directories that still belong to the same git repository. Here&amp;rsquo;s an example:
/my-repo
.git/
subfolder/
nestedfile.txt
rootfile.txt
If your current working directory is /my-repo, and that&amp;rsquo;s the root of this git repo (thus the .git/ folder), these two commands will do the same thing.</description></item><item><title>Activate tap to click on touchpad</title><link>http://localhost:1313/techlog/activate-tap-to-click-on-touchpad/</link><pubDate>Sat, 08 Dec 2018 19:52:54 +0200</pubDate><guid>http://localhost:1313/techlog/activate-tap-to-click-on-touchpad/</guid><description>Debian Stretch / Arch Linux Remove the xserver-xorg-input-synaptics package. (important)
# apt remove xserver-xorg-input-synaptics
## Arch
[root@arch ~]# pacman -Ss libinput
extra/libinput 1.12.3-1 [installed]
Input device management and event handling library
extra/xf86-input-libinput 0.28.1-1 (xorg-drivers) [installed]
Generic input driver for the X.Org server based on libinput
Install xserver-xorg-input-libinput:
## Debian
# apt install xserver-xorg-input-libinput
In most cases, make sure you have the xserver-xorg-input-libinput package installed, and not the xserver-xorg-input-synaptics package.</description></item><item><title>Show percentage of already started DD</title><link>http://localhost:1313/techlog/show-percentage-of-already-started-dd/</link><pubDate>Sun, 23 Sep 2018 11:20:07 +0200</pubDate><guid>http://localhost:1313/techlog/show-percentage-of-already-started-dd/</guid><description>To get started, install the pv package: pacman -S pv
Run dd, then, in a separate shell, invoke the following command:
sudo pv -d $(pidof dd) or start over from the beginning :
pv /path/to/isofile | sudo dd of=/dev/sdX</description></item><item><title>Create ddns on your current bind9 server</title><link>http://localhost:1313/techlog/create-ddns-on-your-current-bind9-server/</link><pubDate>Tue, 11 Sep 2018 22:09:57 +0200</pubDate><guid>http://localhost:1313/techlog/create-ddns-on-your-current-bind9-server/</guid><description>Tasks. We have example.com server with bing9 server.
At home we have a server with dynamic IP.
Pin the dynamic IP to your own server. -&amp;gt; home.example.com
Server The document asserts a working BIND setup already in place. Installing and configuring BIND is out of scope here.
Creating a key-pair To create a key-pair, we&amp;rsquo;ll be using dnssec-keygen.
server$ dnssec-keygen -a HMAC-SHA512 -b 512 -n USER home.example.com. This creates two files, which will be named differently based on individual runs.</description></item><item><title>Create user, datebase and grant permission in MySQL/PostgreSQL</title><link>http://localhost:1313/techlog/create-user-datebase-and-grant-permission-in-mysql/postgresql/</link><pubDate>Sat, 08 Sep 2018 20:14:53 +0200</pubDate><guid>http://localhost:1313/techlog/create-user-datebase-and-grant-permission-in-mysql/postgresql/</guid><description>MySQL 1.Login to MySQL
mysql -u root -p
2.Create new user
CREATE USER 'forum'@'localhost' IDENTIFIED BY 'password';
3.Create datebase for user
CREATE DATABASE forum;
4.Grant all permission for user datebase
GRANT ALL PRIVILEGES ON forum.* TO 'forum'@'localhost';
PostgreSQL 1.Creating user
sudo -u postgres createuser &amp;lt;username&amp;gt;
2.Creating Database
sudo -u postgres createdb &amp;lt;dbname&amp;gt;
3.Giving the user a password
sudo -u postgres psql
psql=# alter user &amp;lt;username&amp;gt; with encrypted password '&amp;lt;password&amp;gt;';
4.Granting privileges on database</description></item><item><title>Gitlab with Apache2 Reverse Proxy</title><link>http://localhost:1313/techlog/gitlab-with-apache2-reverse-proxy/</link><pubDate>Mon, 25 Jun 2018 20:02:13 +0200</pubDate><guid>http://localhost:1313/techlog/gitlab-with-apache2-reverse-proxy/</guid><description>This is my config for gitlab with apache2 reverse proxy, Web IDE works!
&amp;lt;VirtualHost *:80&amp;gt;
ServerName gitlab.itunix.eu
ServerAlias gitlab.itunix.eu mt.itunix.eu www.gitlab.itunix.eu www.mt.itunix.eu
ServerAdmin skorotkiewicz@gmail.com
RewriteEngine on
ReWriteCond %{SERVER_PORT} !^443$
RewriteRule ^/(.*) https://gitlab.itunix.eu/$1 [NC,R,L]
&amp;lt;/VirtualHost&amp;gt;
&amp;lt;VirtualHost *:443&amp;gt;
ServerName gitlab.itunix.eu
ServerAlias gitlab.itunix.eu www.gitlab.itunix.eu
ServerAdmin skorotkiewicz@gmail.com
ProxyPass / http://localhost:1234/ nocanon
ProxyPassReverse / http://localhost:1234/
ProxyPreserveHost On
AllowEncodedSlashes NoDecode
SSLEngine on
SSLCertificateFile /etc/letsencrypt/live/itunix.eu-0001/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/itunix.eu-0001/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/itunix.eu-0001/fullchain.pem
ErrorLog /var/log/apache2/error_gitlab.log
CustomLog /var/log/apache2/access_gitlab.log combined
&amp;lt;/VirtualHost&amp;gt;</description></item><item><title>Fix GitLab is taking too much time to respond. 502 Error</title><link>http://localhost:1313/techlog/fix-gitlab-is-taking-too-much-time-to-respond.-502-error/</link><pubDate>Sat, 09 Jun 2018 19:23:43 +0200</pubDate><guid>http://localhost:1313/techlog/fix-gitlab-is-taking-too-much-time-to-respond.-502-error/</guid><description>Solution by iamchanghyunpark
&amp;ldquo;I checked the pid value in the log and checked if there was a running process with the same pid, and no there was none.
I&amp;rsquo;m guessing this is because of the unexpected powerdown, and unicorn.pid was not properly cleared.
My solution was simple&amp;rdquo;
docker-compose exec gitlab bash
vi log/unicorn.stderr.log # remove the value (which is the pid), save and exit
exit # from the bash shell of the gitlab container
#Now restart the containers
docker-compose down
docker-compose up -d</description></item><item><title>Homeautomation - detect presence of Wifi devices</title><link>http://localhost:1313/techlog/homeautomation-detect-presence-of-wifi-devices/</link><pubDate>Sat, 02 Jun 2018 20:12:51 +0200</pubDate><guid>http://localhost:1313/techlog/homeautomation-detect-presence-of-wifi-devices/</guid><description>A simple shell script to detect presence of Wifi devices (smartphones, tablets, Amazon Dash Buttons, ..) and post the results via MQTT. This information can be processed in Homeautomation Systems to turn down the heating when everyone left the appartment.
Install the MQTT client on your Router Install the packages withÂ opkg opkg install mosquitto-client opkg install coreutils-nohup or with luci.
Copy over the script Use SCP to copy the presence_report script to /usr/bin/presence_report on the target device.</description></item><item><title>Minio: How's bucket policy related to anonymous/authorized access?</title><link>http://localhost:1313/techlog/minio-hows-bucket-policy-related-to-anonymous/authorized-access/</link><pubDate>Fri, 30 Mar 2018 23:50:35 +0200</pubDate><guid>http://localhost:1313/techlog/minio-hows-bucket-policy-related-to-anonymous/authorized-access/</guid><description>thanks Cumbu from stackoverflow.com!
&amp;lsquo;public&amp;rsquo; is valid policy&amp;hellip;
You can change this policy: install mc (minio client) and then:
# list default hosts after install: mc config host ls # remove all hosts: mc config host rm {hostName} mc config host rm local # add your host: mc config host add {hostName} {url} {apiKey} {apiSecret} mc config host add local http://127.0.0.1:9000 ClientIdASSDSD ClientSecretASASASdsasdasdasdasd # create bucket: mc mb {host}/{bucket} mc mb local/mybucket # change bucket policy: mc policy {policy} {host}/{bucket} mc policy public local/mybucket</description></item><item><title>LEDE /OpenWRT on USB Stick</title><link>http://localhost:1313/techlog/lede-/openwrt-on-usb-stick/</link><pubDate>Sat, 24 Mar 2018 01:23:49 +0200</pubDate><guid>http://localhost:1313/techlog/lede-/openwrt-on-usb-stick/</guid><description>Prepare your USB Stick: mkfs.ext4 /dev/sda1
Install pacages on your router
opkg update; opkg install block-mount kmod-usb-core kmod-usb-ohci kmod-usb-storage kmod-usb2 kmod-scsi-core kmod-scsi-generic kmod-fs-ext4 libblkid Plug your USB Stick into your router
mount /dev/sda1 /mnt tar -C /overlay -cvf - . | tar -C /mnt -xf - umount /mnt Edit fstab
block detect &amp;gt; /etc/config/fstab vim /etc/config/fstab Config:
root@LEDE:~# cat /etc/config/fstab config 'global' option anon_swap '0' option anon_mount '0' option auto_swap '1' option auto_mount '1' option delay_root '5' option check_fs '0' config 'mount' option target '/overlay' option uuid '&amp;lt;uuid&amp;gt;' option enabled '1' option fstype 'ext4' Set the target to /overlay, and change the option enabled line from 0 to 1.</description></item><item><title>Creating Wildcard SSL Certificates with Letâs Encrypt</title><link>http://localhost:1313/techlog/creating-wildcard-ssl-certificates-with-lets-encrypt/</link><pubDate>Fri, 16 Mar 2018 17:59:48 +0200</pubDate><guid>http://localhost:1313/techlog/creating-wildcard-ssl-certificates-with-lets-encrypt/</guid><description>Install certbot: wget https://dl.eff.org/certbot-auto chmod a+x ./certbot-auto ./certbot-auto Get a certificate ./certbot-auto certonly \ --server https://acme-v02.api.letsencrypt.org/directory \ --manual --preferred-challenges dns -d *.itunix.eu An important parameter to notice is --server https://acme-v02.api.letsencrypt.org/directory, which will instruct the certbot client to use v2 of the Let&amp;rsquo;s Encrypt API (we need that for wildcard certs).
Add DNS TXT record _acme-challenge.itunix.eu. IN TXT &amp;quot;XXXX&amp;quot; After add you should verify that it is working using nslookup</description></item><item><title>Reinstall all packages with --force on Arch</title><link>http://localhost:1313/techlog/reinstall-all-packages-with-force-on-arch/</link><pubDate>Sun, 11 Mar 2018 22:08:46 +0200</pubDate><guid>http://localhost:1313/techlog/reinstall-all-packages-with-force-on-arch/</guid><description>Here is simple solution
pacman -Qqen &amp;gt; pkglist.txt pacman --force -S $(&amp;lt; pkglist.txt) mkinitcpio -p linux</description></item><item><title>Create an encrypted file container with dm-crypt</title><link>http://localhost:1313/techlog/create-an-encrypted-file-container-with-dm-crypt/</link><pubDate>Sun, 11 Mar 2018 14:32:13 +0200</pubDate><guid>http://localhost:1313/techlog/create-an-encrypted-file-container-with-dm-crypt/</guid><description>Create an empty file with the size of your container
dd if=/dev/zero bs=1M count=100 of=~/my-container.img Here Iâll use a 100MB container
Initialise the LUKS partition on the file and set the initial passphrase.
cryptsetup luksFormat ~/mycontainer Open the container. Opening the container creates a kernel device file which can then be mounted.
cryptsetup luksOpen ~/mycontainer secret-device This command will prompt for the containerâs passphrase and then create a device file with the name /dev/mapper/secret-device.</description></item><item><title>Building windows go programs on linux</title><link>http://localhost:1313/techlog/building-windows-go-programs-on-linux/</link><pubDate>Sun, 18 Feb 2018 13:54:53 +0200</pubDate><guid>http://localhost:1313/techlog/building-windows-go-programs-on-linux/</guid><description>$ cat hello.go
package main import &amp;#34;fmt&amp;#34; func main() { fmt.Printf(&amp;#34;Hello\n&amp;#34;) } $ GOOS=windows GOARCH=386 go build -o hello.exe hello.go</description></item><item><title>Rename a part of filename of a bunch of files</title><link>http://localhost:1313/techlog/rename-a-part-of-filename-of-a-bunch-of-files/</link><pubDate>Fri, 19 Jan 2018 15:08:37 +0200</pubDate><guid>http://localhost:1313/techlog/rename-a-part-of-filename-of-a-bunch-of-files/</guid><description>Example $ ls -l AndroidTest.pdf Angular2Test.pdf BashTest.pdf The simplest way to remove &amp;lsquo;Test&amp;rsquo; from any files: rename &amp;#39;s/Test//g&amp;#39; *.pdf $ ls -l Android.pdf Angular2.pdf Bash.pdf Or change &amp;lsquo;Test&amp;rsquo; to &amp;lsquo;Hello&amp;rsquo; rename &amp;#39;s/Test/Hello/g&amp;#39; *.pdf $ ls -l AndroidTest.pdf Angular2Test.pdf BashTest.pdf</description></item><item><title>Switch PHP version</title><link>http://localhost:1313/techlog/switch-php-version/</link><pubDate>Wed, 10 Jan 2018 02:29:44 +0200</pubDate><guid>http://localhost:1313/techlog/switch-php-version/</guid><description>From php5.6 to php7.0: Apache:
sudo a2dismod php5.6 ; sudo a2enmod php7.0 ; sudo service apache2 restart CLI:
sudo update-alternatives --set php /usr/bin/php7.0 From php7.0 to php5.6: Apache:
sudo a2dismod php7.0 ; sudo a2enmod php5.6 ; sudo service apache2 restart CLI:
sudo update-alternatives --set php /usr/bin/php5.6</description></item></channel></rss>